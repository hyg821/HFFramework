// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: chat.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Centersdk.Protobuf {

  /// <summary>Holder for reflection information generated from chat.proto</summary>
  public static partial class ChatReflection {

    #region Descriptor
    /// <summary>File descriptor for chat.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChatReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpjaGF0LnByb3RvEhJjZW50ZXJzZGsucHJvdG9idWYaDGZyaWVuZC5wcm90",
            "bxoKcm9sZS5wcm90bxoPZXF1aXBtZW50LnByb3RvIjQKCUNoYXRBcnJheRIn",
            "CgVDaGF0cxgBIAMoCzIYLmNlbnRlcnNkay5wcm90b2J1Zi5DaGF0IpcCCgRD",
            "aGF0EjAKBHJvbGUYASABKAsyIi5jZW50ZXJzZGsucHJvdG9idWYuU2ltcGxl",
            "Um9sZUluZm8SDAoEdGltZRgCIAEoAxIMCgR0eXBlGAMgASgFEg8KB3NjZW5l",
            "SWQYBCABKAUSDQoFbXNnSWQYBSABKAkSDAoEdGV4dBgGIAEoCRIQCghzZW5k",
            "U2VsZhgHIAEoCBIMCgR1aWRzGAggAygDEhEKCW1zZ0xlbmd0aBgJIAEoBRIu",
            "CgZmcmllbmQYCiABKAsyHi5jZW50ZXJzZGsucHJvdG9idWYuRnJpZW5kSW5m",
            "bxIwCgllcXVpcG1lbnQYCyABKAsyHS5jZW50ZXJzZGsucHJvdG9idWYuRXF1",
            "aXBtZW50QioKHWNvbS5ob29sYWkuY2VudGVyc2RrLnByb3RvYnVmQglDaGF0",
            "UHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Centersdk.Protobuf.FriendReflection.Descriptor, global::Centersdk.Protobuf.RoleReflection.Descriptor, global::Centersdk.Protobuf.EquipmentReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.ChatArray), global::Centersdk.Protobuf.ChatArray.Parser, new[]{ "Chats" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.Chat), global::Centersdk.Protobuf.Chat.Parser, new[]{ "Role", "Time", "Type", "SceneId", "MsgId", "Text", "SendSelf", "Uids", "MsgLength", "Friend", "Equipment" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///聊天消息列表
  /// </summary>
  public sealed partial class ChatArray : pb::IMessage<ChatArray> {
    private static readonly pb::MessageParser<ChatArray> _parser = new pb::MessageParser<ChatArray>(() => new ChatArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.ChatReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatArray(ChatArray other) : this() {
      chats_ = other.chats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatArray Clone() {
      return new ChatArray(this);
    }

    /// <summary>Field number for the "Chats" field.</summary>
    public const int ChatsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Centersdk.Protobuf.Chat> _repeated_chats_codec
        = pb::FieldCodec.ForMessage(10, global::Centersdk.Protobuf.Chat.Parser);
    private readonly pbc::RepeatedField<global::Centersdk.Protobuf.Chat> chats_ = new pbc::RepeatedField<global::Centersdk.Protobuf.Chat>();
    /// <summary>
    ///消息列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Centersdk.Protobuf.Chat> Chats {
      get { return chats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!chats_.Equals(other.chats_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= chats_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      chats_.WriteTo(output, _repeated_chats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += chats_.CalculateSize(_repeated_chats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatArray other) {
      if (other == null) {
        return;
      }
      chats_.Add(other.chats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            chats_.AddEntriesFrom(input, _repeated_chats_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///单个聊天消息
  /// </summary>
  public sealed partial class Chat : pb::IMessage<Chat> {
    private static readonly pb::MessageParser<Chat> _parser = new pb::MessageParser<Chat>(() => new Chat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Chat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.ChatReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chat(Chat other) : this() {
      role_ = other.role_ != null ? other.role_.Clone() : null;
      time_ = other.time_;
      type_ = other.type_;
      sceneId_ = other.sceneId_;
      msgId_ = other.msgId_;
      text_ = other.text_;
      sendSelf_ = other.sendSelf_;
      uids_ = other.uids_.Clone();
      msgLength_ = other.msgLength_;
      friend_ = other.friend_ != null ? other.friend_.Clone() : null;
      equipment_ = other.equipment_ != null ? other.equipment_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chat Clone() {
      return new Chat(this);
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 1;
    private global::Centersdk.Protobuf.SimpleRoleInfo role_;
    /// <summary>
    ///消息发送者的角色信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Centersdk.Protobuf.SimpleRoleInfo Role {
      get { return role_; }
      set {
        role_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 2;
    private long time_;
    /// <summary>
    ///发言时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private int type_;
    /// <summary>
    ///消息类型 1、普通消息 2、系统消息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "sceneId" field.</summary>
    public const int SceneIdFieldNumber = 4;
    private int sceneId_;
    /// <summary>
    ///场景ID 1、世界聊天 2、好友聊天
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    /// <summary>Field number for the "msgId" field.</summary>
    public const int MsgIdFieldNumber = 5;
    private string msgId_ = "";
    /// <summary>
    ///语音消息ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MsgId {
      get { return msgId_; }
      set {
        msgId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 6;
    private string text_ = "";
    /// <summary>
    ///发言文本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sendSelf" field.</summary>
    public const int SendSelfFieldNumber = 7;
    private bool sendSelf_;
    /// <summary>
    ///只发送给自己(某种限制导致。这个消息只有自己能看到)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SendSelf {
      get { return sendSelf_; }
      set {
        sendSelf_ = value;
      }
    }

    /// <summary>Field number for the "uids" field.</summary>
    public const int UidsFieldNumber = 8;
    private static readonly pb::FieldCodec<long> _repeated_uids_codec
        = pb::FieldCodec.ForInt64(66);
    private readonly pbc::RepeatedField<long> uids_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///消息接收者ID集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Uids {
      get { return uids_; }
    }

    /// <summary>Field number for the "msgLength" field.</summary>
    public const int MsgLengthFieldNumber = 9;
    private int msgLength_;
    /// <summary>
    ///语音消息时长
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgLength {
      get { return msgLength_; }
      set {
        msgLength_ = value;
      }
    }

    /// <summary>Field number for the "friend" field.</summary>
    public const int FriendFieldNumber = 10;
    private global::Centersdk.Protobuf.FriendInfo friend_;
    /// <summary>
    ///好友聊天中。消息接收者(好友)的角色信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Centersdk.Protobuf.FriendInfo Friend {
      get { return friend_; }
      set {
        friend_ = value;
      }
    }

    /// <summary>Field number for the "equipment" field.</summary>
    public const int EquipmentFieldNumber = 11;
    private global::Centersdk.Protobuf.Equipment equipment_;
    /// <summary>
    ///装备信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Centersdk.Protobuf.Equipment Equipment {
      get { return equipment_; }
      set {
        equipment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Chat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Chat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Role, other.Role)) return false;
      if (Time != other.Time) return false;
      if (Type != other.Type) return false;
      if (SceneId != other.SceneId) return false;
      if (MsgId != other.MsgId) return false;
      if (Text != other.Text) return false;
      if (SendSelf != other.SendSelf) return false;
      if(!uids_.Equals(other.uids_)) return false;
      if (MsgLength != other.MsgLength) return false;
      if (!object.Equals(Friend, other.Friend)) return false;
      if (!object.Equals(Equipment, other.Equipment)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (role_ != null) hash ^= Role.GetHashCode();
      if (Time != 0L) hash ^= Time.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (SceneId != 0) hash ^= SceneId.GetHashCode();
      if (MsgId.Length != 0) hash ^= MsgId.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (SendSelf != false) hash ^= SendSelf.GetHashCode();
      hash ^= uids_.GetHashCode();
      if (MsgLength != 0) hash ^= MsgLength.GetHashCode();
      if (friend_ != null) hash ^= Friend.GetHashCode();
      if (equipment_ != null) hash ^= Equipment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (role_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Role);
      }
      if (Time != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Time);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (SceneId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SceneId);
      }
      if (MsgId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MsgId);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Text);
      }
      if (SendSelf != false) {
        output.WriteRawTag(56);
        output.WriteBool(SendSelf);
      }
      uids_.WriteTo(output, _repeated_uids_codec);
      if (MsgLength != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MsgLength);
      }
      if (friend_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Friend);
      }
      if (equipment_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Equipment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (role_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Role);
      }
      if (Time != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (SceneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SceneId);
      }
      if (MsgId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MsgId);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (SendSelf != false) {
        size += 1 + 1;
      }
      size += uids_.CalculateSize(_repeated_uids_codec);
      if (MsgLength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgLength);
      }
      if (friend_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Friend);
      }
      if (equipment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Equipment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Chat other) {
      if (other == null) {
        return;
      }
      if (other.role_ != null) {
        if (role_ == null) {
          role_ = new global::Centersdk.Protobuf.SimpleRoleInfo();
        }
        Role.MergeFrom(other.Role);
      }
      if (other.Time != 0L) {
        Time = other.Time;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.SceneId != 0) {
        SceneId = other.SceneId;
      }
      if (other.MsgId.Length != 0) {
        MsgId = other.MsgId;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.SendSelf != false) {
        SendSelf = other.SendSelf;
      }
      uids_.Add(other.uids_);
      if (other.MsgLength != 0) {
        MsgLength = other.MsgLength;
      }
      if (other.friend_ != null) {
        if (friend_ == null) {
          friend_ = new global::Centersdk.Protobuf.FriendInfo();
        }
        Friend.MergeFrom(other.Friend);
      }
      if (other.equipment_ != null) {
        if (equipment_ == null) {
          equipment_ = new global::Centersdk.Protobuf.Equipment();
        }
        Equipment.MergeFrom(other.Equipment);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (role_ == null) {
              role_ = new global::Centersdk.Protobuf.SimpleRoleInfo();
            }
            input.ReadMessage(role_);
            break;
          }
          case 16: {
            Time = input.ReadInt64();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 32: {
            SceneId = input.ReadInt32();
            break;
          }
          case 42: {
            MsgId = input.ReadString();
            break;
          }
          case 50: {
            Text = input.ReadString();
            break;
          }
          case 56: {
            SendSelf = input.ReadBool();
            break;
          }
          case 66:
          case 64: {
            uids_.AddEntriesFrom(input, _repeated_uids_codec);
            break;
          }
          case 72: {
            MsgLength = input.ReadInt32();
            break;
          }
          case 82: {
            if (friend_ == null) {
              friend_ = new global::Centersdk.Protobuf.FriendInfo();
            }
            input.ReadMessage(friend_);
            break;
          }
          case 90: {
            if (equipment_ == null) {
              equipment_ = new global::Centersdk.Protobuf.Equipment();
            }
            input.ReadMessage(equipment_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
