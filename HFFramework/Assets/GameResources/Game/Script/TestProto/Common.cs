// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Centersdk.Protobuf {

  /// <summary>Holder for reflection information generated from common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgxjb21tb24ucHJvdG8SEmNlbnRlcnNkay5wcm90b2J1ZiKAAQoLUGFyYW1z",
            "QXJyYXkSKgoGcGFyYW1zGAEgAygLMhouY2VudGVyc2RrLnByb3RvYnVmLlBh",
            "cmFtcxIpCgVwYXJhbRgCIAEoCzIaLmNlbnRlcnNkay5wcm90b2J1Zi5QYXJh",
            "bXMSDAoEY29kZRgDIAEoBRIMCgR0eXBlGAQgASgFItECCgZQYXJhbXMSDgoG",
            "dXNlcklkGAEgASgDEg4KBnJvbGVJZBgCIAEoAxIKCgJpZBgDIAEoBRIMCgRj",
            "b2RlGAQgASgFEg0KBWNvdW50GAUgASgFEg4KBmFtb3VudBgGIAEoAxINCgV2",
            "YWx1ZRgHIAEoBRINCgVpbmRleBgIIAEoBRIOCgZzdGF0dXMYCSABKAUSDwoH",
            "c3RhdHVzQhgKIAEoCBIMCgR0eXBlGAsgASgFEg4KBml0ZW1JZBgMIAEoBRIM",
            "CgRnb2xkGA0gASgFEgwKBHRpbWUYDiABKAMSDAoEdGV4dBgPIAEoCRIPCgdj",
            "b250ZW50GBAgASgJEg8KB3VzZXJJZHMYESADKAMSDwoHaW50VmFscxgSIAMo",
            "BRIQCghsb25nVmFscxgTIAMoAxIPCgdzdHJWYWxzGBQgAygJEhEKCWZsb2F0",
            "VmFscxgVIAMoAiIHCgVFbXB0eSLKAQoOUXVpY2tMb2dpbkluZm8SDwoHdXNl",
            "cl9JZBgBIAEoAxIPCgdyb2xlX2lkGAIgASgDEgsKA2tleRgDIAEoAxIRCglz",
            "ZXJ2ZXJfaWQYBCABKAkSCgoCaXAYBSABKAkSDAoEcG9ydBgGIAEoBRIMCgR0",
            "eXBlGAcgASgJEg0KBXBhcmFtGAggASgJEgwKBGNvZGUYCSABKAUSEAoIZ3Jv",
            "dXBfaWQYCiABKAkSDwoHdmVyc2lvbhgLIAEoCRIOCgZyb29tSWQYDCABKAMi",
            "NwoNSW50ZWdlclZhbHVlcxIKCgJpZBgBIAEoBRIMCgR2YWxzGAIgAygFEgwK",
            "BHZhbDEYAyABKAUiGwoMSW50ZWdlclZhbHVlEgsKA3ZhbBgBIAEoBSIYCglM",
            "b25nVmFsdWUSCwoDdmFsGAEgASgDIjQKCkxvbmdWYWx1ZXMSDAoEdmFscxgB",
            "IAMoAxIKCgJpZBgCIAEoBRIMCgR2YWwxGAMgASgFIjMKD1R3b0ludGVnZXJW",
            "YWx1ZRIPCgdpbnRWYWwxGAEgASgFEg8KB2ludFZhbDIYAiABKAUiVgoQVHdv",
            "SW50ZWdlclZhbHVlcxIxCgR2YWxzGAEgAygLMiMuY2VudGVyc2RrLnByb3Rv",
            "YnVmLlR3b0ludGVnZXJWYWx1ZRIPCgdpbnRWYWwxGAIgASgFIksKFlR3b0lu",
            "dGVnZXJBbmRMb25nVmFsdWUSDwoHbG9uZ1ZhbBgBIAEoAxIPCgdpbnRWYWwx",
            "GAIgASgFEg8KB2ludFZhbDIYAyABKAUiGgoLU3RyaW5nVmFsdWUSCwoDdmFs",
            "GAEgASgJIhkKCkZsb2F0VmFsdWUSCwoDdmFsGAEgASgCIhwKDFN0cmluZ1Zh",
            "bHVlcxIMCgR2YWxzGAEgAygJIicKBlN0YXR1cxIMCgRjb2RlGAEgASgFEg8K",
            "B21lc3NhZ2UYAiABKAlCLAodY29tLmhvb2xhaS5jZW50ZXJzZGsucHJvdG9i",
            "dWZCC0NvbW1vblByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.ParamsArray), global::Centersdk.Protobuf.ParamsArray.Parser, new[]{ "Params", "Param", "Code", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.Params), global::Centersdk.Protobuf.Params.Parser, new[]{ "UserId", "RoleId", "Id", "Code", "Count", "Amount", "Value", "Index", "Status", "StatusB", "Type", "ItemId", "Gold", "Time", "Text", "Content", "UserIds", "IntVals", "LongVals", "StrVals", "FloatVals" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.Empty), global::Centersdk.Protobuf.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.QuickLoginInfo), global::Centersdk.Protobuf.QuickLoginInfo.Parser, new[]{ "UserId", "RoleId", "Key", "ServerId", "Ip", "Port", "Type", "Param", "Code", "GroupId", "Version", "RoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.IntegerValues), global::Centersdk.Protobuf.IntegerValues.Parser, new[]{ "Id", "Vals", "Val1" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.IntegerValue), global::Centersdk.Protobuf.IntegerValue.Parser, new[]{ "Val" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.LongValue), global::Centersdk.Protobuf.LongValue.Parser, new[]{ "Val" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.LongValues), global::Centersdk.Protobuf.LongValues.Parser, new[]{ "Vals", "Id", "Val1" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.TwoIntegerValue), global::Centersdk.Protobuf.TwoIntegerValue.Parser, new[]{ "IntVal1", "IntVal2" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.TwoIntegerValues), global::Centersdk.Protobuf.TwoIntegerValues.Parser, new[]{ "Vals", "IntVal1" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.TwoIntegerAndLongValue), global::Centersdk.Protobuf.TwoIntegerAndLongValue.Parser, new[]{ "LongVal", "IntVal1", "IntVal2" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.StringValue), global::Centersdk.Protobuf.StringValue.Parser, new[]{ "Val" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.FloatValue), global::Centersdk.Protobuf.FloatValue.Parser, new[]{ "Val" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.StringValues), global::Centersdk.Protobuf.StringValues.Parser, new[]{ "Vals" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.Status), global::Centersdk.Protobuf.Status.Parser, new[]{ "Code", "Message" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///通用数组参数类
  /// </summary>
  public sealed partial class ParamsArray : pb::IMessage<ParamsArray> {
    private static readonly pb::MessageParser<ParamsArray> _parser = new pb::MessageParser<ParamsArray>(() => new ParamsArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParamsArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParamsArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParamsArray(ParamsArray other) : this() {
      params_ = other.params_.Clone();
      param_ = other.param_ != null ? other.param_.Clone() : null;
      code_ = other.code_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParamsArray Clone() {
      return new ParamsArray(this);
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Centersdk.Protobuf.Params> _repeated_params_codec
        = pb::FieldCodec.ForMessage(10, global::Centersdk.Protobuf.Params.Parser);
    private readonly pbc::RepeatedField<global::Centersdk.Protobuf.Params> params_ = new pbc::RepeatedField<global::Centersdk.Protobuf.Params>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Centersdk.Protobuf.Params> Params {
      get { return params_; }
    }

    /// <summary>Field number for the "param" field.</summary>
    public const int ParamFieldNumber = 2;
    private global::Centersdk.Protobuf.Params param_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Centersdk.Protobuf.Params Param {
      get { return param_; }
      set {
        param_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 3;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParamsArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParamsArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!params_.Equals(other.params_)) return false;
      if (!object.Equals(Param, other.Param)) return false;
      if (Code != other.Code) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= params_.GetHashCode();
      if (param_ != null) hash ^= Param.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      params_.WriteTo(output, _repeated_params_codec);
      if (param_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Param);
      }
      if (Code != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Code);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += params_.CalculateSize(_repeated_params_codec);
      if (param_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Param);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParamsArray other) {
      if (other == null) {
        return;
      }
      params_.Add(other.params_);
      if (other.param_ != null) {
        if (param_ == null) {
          param_ = new global::Centersdk.Protobuf.Params();
        }
        Param.MergeFrom(other.Param);
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            params_.AddEntriesFrom(input, _repeated_params_codec);
            break;
          }
          case 18: {
            if (param_ == null) {
              param_ = new global::Centersdk.Protobuf.Params();
            }
            input.ReadMessage(param_);
            break;
          }
          case 24: {
            Code = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///通用参数类。此类目的。避免重复定义VO
  /// </summary>
  public sealed partial class Params : pb::IMessage<Params> {
    private static readonly pb::MessageParser<Params> _parser = new pb::MessageParser<Params>(() => new Params());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Params> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Params() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Params(Params other) : this() {
      userId_ = other.userId_;
      roleId_ = other.roleId_;
      id_ = other.id_;
      code_ = other.code_;
      count_ = other.count_;
      amount_ = other.amount_;
      value_ = other.value_;
      index_ = other.index_;
      status_ = other.status_;
      statusB_ = other.statusB_;
      type_ = other.type_;
      itemId_ = other.itemId_;
      gold_ = other.gold_;
      time_ = other.time_;
      text_ = other.text_;
      content_ = other.content_;
      userIds_ = other.userIds_.Clone();
      intVals_ = other.intVals_.Clone();
      longVals_ = other.longVals_.Clone();
      strVals_ = other.strVals_.Clone();
      floatVals_ = other.floatVals_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Params Clone() {
      return new Params(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private long userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "roleId" field.</summary>
    public const int RoleIdFieldNumber = 2;
    private long roleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RoleId {
      get { return roleId_; }
      set {
        roleId_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 4;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 5;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 6;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 7;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 8;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 9;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "statusB" field.</summary>
    public const int StatusBFieldNumber = 10;
    private bool statusB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool StatusB {
      get { return statusB_; }
      set {
        statusB_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 11;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 12;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "gold" field.</summary>
    public const int GoldFieldNumber = 13;
    private int gold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 14;
    private long time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 15;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 16;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userIds" field.</summary>
    public const int UserIdsFieldNumber = 17;
    private static readonly pb::FieldCodec<long> _repeated_userIds_codec
        = pb::FieldCodec.ForInt64(138);
    private readonly pbc::RepeatedField<long> userIds_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///用户ID数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> UserIds {
      get { return userIds_; }
    }

    /// <summary>Field number for the "intVals" field.</summary>
    public const int IntValsFieldNumber = 18;
    private static readonly pb::FieldCodec<int> _repeated_intVals_codec
        = pb::FieldCodec.ForInt32(146);
    private readonly pbc::RepeatedField<int> intVals_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///整形数组参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IntVals {
      get { return intVals_; }
    }

    /// <summary>Field number for the "longVals" field.</summary>
    public const int LongValsFieldNumber = 19;
    private static readonly pb::FieldCodec<long> _repeated_longVals_codec
        = pb::FieldCodec.ForInt64(154);
    private readonly pbc::RepeatedField<long> longVals_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///长整型数组参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> LongVals {
      get { return longVals_; }
    }

    /// <summary>Field number for the "strVals" field.</summary>
    public const int StrValsFieldNumber = 20;
    private static readonly pb::FieldCodec<string> _repeated_strVals_codec
        = pb::FieldCodec.ForString(162);
    private readonly pbc::RepeatedField<string> strVals_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///字符数组参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> StrVals {
      get { return strVals_; }
    }

    /// <summary>Field number for the "floatVals" field.</summary>
    public const int FloatValsFieldNumber = 21;
    private static readonly pb::FieldCodec<float> _repeated_floatVals_codec
        = pb::FieldCodec.ForFloat(170);
    private readonly pbc::RepeatedField<float> floatVals_ = new pbc::RepeatedField<float>();
    /// <summary>
    ///float类型参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> FloatVals {
      get { return floatVals_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Params);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Params other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (RoleId != other.RoleId) return false;
      if (Id != other.Id) return false;
      if (Code != other.Code) return false;
      if (Count != other.Count) return false;
      if (Amount != other.Amount) return false;
      if (Value != other.Value) return false;
      if (Index != other.Index) return false;
      if (Status != other.Status) return false;
      if (StatusB != other.StatusB) return false;
      if (Type != other.Type) return false;
      if (ItemId != other.ItemId) return false;
      if (Gold != other.Gold) return false;
      if (Time != other.Time) return false;
      if (Text != other.Text) return false;
      if (Content != other.Content) return false;
      if(!userIds_.Equals(other.userIds_)) return false;
      if(!intVals_.Equals(other.intVals_)) return false;
      if(!longVals_.Equals(other.longVals_)) return false;
      if(!strVals_.Equals(other.strVals_)) return false;
      if(!floatVals_.Equals(other.floatVals_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0L) hash ^= UserId.GetHashCode();
      if (RoleId != 0L) hash ^= RoleId.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (StatusB != false) hash ^= StatusB.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (Gold != 0) hash ^= Gold.GetHashCode();
      if (Time != 0L) hash ^= Time.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      hash ^= userIds_.GetHashCode();
      hash ^= intVals_.GetHashCode();
      hash ^= longVals_.GetHashCode();
      hash ^= strVals_.GetHashCode();
      hash ^= floatVals_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserId);
      }
      if (RoleId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RoleId);
      }
      if (Id != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Id);
      }
      if (Code != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Code);
      }
      if (Count != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Count);
      }
      if (Amount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Amount);
      }
      if (Value != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Value);
      }
      if (Index != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Index);
      }
      if (Status != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Status);
      }
      if (StatusB != false) {
        output.WriteRawTag(80);
        output.WriteBool(StatusB);
      }
      if (Type != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Type);
      }
      if (ItemId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ItemId);
      }
      if (Gold != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Gold);
      }
      if (Time != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(Time);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Text);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Content);
      }
      userIds_.WriteTo(output, _repeated_userIds_codec);
      intVals_.WriteTo(output, _repeated_intVals_codec);
      longVals_.WriteTo(output, _repeated_longVals_codec);
      strVals_.WriteTo(output, _repeated_strVals_codec);
      floatVals_.WriteTo(output, _repeated_floatVals_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
      }
      if (RoleId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoleId);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (StatusB != false) {
        size += 1 + 1;
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (Gold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gold);
      }
      if (Time != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (Content.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      size += userIds_.CalculateSize(_repeated_userIds_codec);
      size += intVals_.CalculateSize(_repeated_intVals_codec);
      size += longVals_.CalculateSize(_repeated_longVals_codec);
      size += strVals_.CalculateSize(_repeated_strVals_codec);
      size += floatVals_.CalculateSize(_repeated_floatVals_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Params other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0L) {
        UserId = other.UserId;
      }
      if (other.RoleId != 0L) {
        RoleId = other.RoleId;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.StatusB != false) {
        StatusB = other.StatusB;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.Gold != 0) {
        Gold = other.Gold;
      }
      if (other.Time != 0L) {
        Time = other.Time;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      userIds_.Add(other.userIds_);
      intVals_.Add(other.intVals_);
      longVals_.Add(other.longVals_);
      strVals_.Add(other.strVals_);
      floatVals_.Add(other.floatVals_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt64();
            break;
          }
          case 16: {
            RoleId = input.ReadInt64();
            break;
          }
          case 24: {
            Id = input.ReadInt32();
            break;
          }
          case 32: {
            Code = input.ReadInt32();
            break;
          }
          case 40: {
            Count = input.ReadInt32();
            break;
          }
          case 48: {
            Amount = input.ReadInt64();
            break;
          }
          case 56: {
            Value = input.ReadInt32();
            break;
          }
          case 64: {
            Index = input.ReadInt32();
            break;
          }
          case 72: {
            Status = input.ReadInt32();
            break;
          }
          case 80: {
            StatusB = input.ReadBool();
            break;
          }
          case 88: {
            Type = input.ReadInt32();
            break;
          }
          case 96: {
            ItemId = input.ReadInt32();
            break;
          }
          case 104: {
            Gold = input.ReadInt32();
            break;
          }
          case 112: {
            Time = input.ReadInt64();
            break;
          }
          case 122: {
            Text = input.ReadString();
            break;
          }
          case 130: {
            Content = input.ReadString();
            break;
          }
          case 138:
          case 136: {
            userIds_.AddEntriesFrom(input, _repeated_userIds_codec);
            break;
          }
          case 146:
          case 144: {
            intVals_.AddEntriesFrom(input, _repeated_intVals_codec);
            break;
          }
          case 154:
          case 152: {
            longVals_.AddEntriesFrom(input, _repeated_longVals_codec);
            break;
          }
          case 162: {
            strVals_.AddEntriesFrom(input, _repeated_strVals_codec);
            break;
          }
          case 170:
          case 173: {
            floatVals_.AddEntriesFrom(input, _repeated_floatVals_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.CommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 服务器之间跳转时使用
  /// </summary>
  public sealed partial class QuickLoginInfo : pb::IMessage<QuickLoginInfo> {
    private static readonly pb::MessageParser<QuickLoginInfo> _parser = new pb::MessageParser<QuickLoginInfo>(() => new QuickLoginInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuickLoginInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.CommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickLoginInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickLoginInfo(QuickLoginInfo other) : this() {
      userId_ = other.userId_;
      roleId_ = other.roleId_;
      key_ = other.key_;
      serverId_ = other.serverId_;
      ip_ = other.ip_;
      port_ = other.port_;
      type_ = other.type_;
      param_ = other.param_;
      code_ = other.code_;
      groupId_ = other.groupId_;
      version_ = other.version_;
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickLoginInfo Clone() {
      return new QuickLoginInfo(this);
    }

    /// <summary>Field number for the "user_Id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private long userId_;
    /// <summary>
    /// 玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "role_id" field.</summary>
    public const int RoleIdFieldNumber = 2;
    private long roleId_;
    /// <summary>
    /// 角色ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RoleId {
      get { return roleId_; }
      set {
        roleId_ = value;
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 3;
    private long key_;
    /// <summary>
    /// 登录key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "server_id" field.</summary>
    public const int ServerIdFieldNumber = 4;
    private string serverId_ = "";
    /// <summary>
    /// 服务器ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerId {
      get { return serverId_; }
      set {
        serverId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 5;
    private string ip_ = "";
    /// <summary>
    /// 服务器域名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ip {
      get { return ip_; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 6;
    private int port_;
    /// <summary>
    /// 服务器端口
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 7;
    private string type_ = "";
    /// <summary>
    /// 服务器类别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "param" field.</summary>
    public const int ParamFieldNumber = 8;
    private string param_ = "";
    /// <summary>
    /// 特有参数，一般由子服务器和前端协商定义。建议使用json格式。方便拓展
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Param {
      get { return param_; }
      set {
        param_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 9;
    private int code_;
    /// <summary>
    /// 消息码，前后端协商定义
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "group_id" field.</summary>
    public const int GroupIdFieldNumber = 10;
    private string groupId_ = "";
    /// <summary>
    /// 玩法的分类ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 11;
    private string version_ = "";
    /// <summary>
    /// 用户登录版本号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 12;
    private long roomId_;
    /// <summary>
    /// 房间ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuickLoginInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuickLoginInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (RoleId != other.RoleId) return false;
      if (Key != other.Key) return false;
      if (ServerId != other.ServerId) return false;
      if (Ip != other.Ip) return false;
      if (Port != other.Port) return false;
      if (Type != other.Type) return false;
      if (Param != other.Param) return false;
      if (Code != other.Code) return false;
      if (GroupId != other.GroupId) return false;
      if (Version != other.Version) return false;
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0L) hash ^= UserId.GetHashCode();
      if (RoleId != 0L) hash ^= RoleId.GetHashCode();
      if (Key != 0L) hash ^= Key.GetHashCode();
      if (ServerId.Length != 0) hash ^= ServerId.GetHashCode();
      if (Ip.Length != 0) hash ^= Ip.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Param.Length != 0) hash ^= Param.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (RoomId != 0L) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserId);
      }
      if (RoleId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RoleId);
      }
      if (Key != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Key);
      }
      if (ServerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ServerId);
      }
      if (Ip.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Ip);
      }
      if (Port != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Port);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Type);
      }
      if (Param.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Param);
      }
      if (Code != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Code);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(GroupId);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Version);
      }
      if (RoomId != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
      }
      if (RoleId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoleId);
      }
      if (Key != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Key);
      }
      if (ServerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerId);
      }
      if (Ip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Param.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Param);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (RoomId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuickLoginInfo other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0L) {
        UserId = other.UserId;
      }
      if (other.RoleId != 0L) {
        RoleId = other.RoleId;
      }
      if (other.Key != 0L) {
        Key = other.Key;
      }
      if (other.ServerId.Length != 0) {
        ServerId = other.ServerId;
      }
      if (other.Ip.Length != 0) {
        Ip = other.Ip;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Param.Length != 0) {
        Param = other.Param;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.RoomId != 0L) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt64();
            break;
          }
          case 16: {
            RoleId = input.ReadInt64();
            break;
          }
          case 24: {
            Key = input.ReadInt64();
            break;
          }
          case 34: {
            ServerId = input.ReadString();
            break;
          }
          case 42: {
            Ip = input.ReadString();
            break;
          }
          case 48: {
            Port = input.ReadInt32();
            break;
          }
          case 58: {
            Type = input.ReadString();
            break;
          }
          case 66: {
            Param = input.ReadString();
            break;
          }
          case 72: {
            Code = input.ReadInt32();
            break;
          }
          case 82: {
            GroupId = input.ReadString();
            break;
          }
          case 90: {
            Version = input.ReadString();
            break;
          }
          case 96: {
            RoomId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// int数组
  /// </summary>
  public sealed partial class IntegerValues : pb::IMessage<IntegerValues> {
    private static readonly pb::MessageParser<IntegerValues> _parser = new pb::MessageParser<IntegerValues>(() => new IntegerValues());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IntegerValues> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.CommonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntegerValues() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntegerValues(IntegerValues other) : this() {
      id_ = other.id_;
      vals_ = other.vals_.Clone();
      val1_ = other.val1_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntegerValues Clone() {
      return new IntegerValues(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "vals" field.</summary>
    public const int ValsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_vals_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> vals_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 整数数组参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Vals {
      get { return vals_; }
    }

    /// <summary>Field number for the "val1" field.</summary>
    public const int Val1FieldNumber = 3;
    private int val1_;
    /// <summary>
    /// 扩展参数1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Val1 {
      get { return val1_; }
      set {
        val1_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IntegerValues);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IntegerValues other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!vals_.Equals(other.vals_)) return false;
      if (Val1 != other.Val1) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= vals_.GetHashCode();
      if (Val1 != 0) hash ^= Val1.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      vals_.WriteTo(output, _repeated_vals_codec);
      if (Val1 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Val1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += vals_.CalculateSize(_repeated_vals_codec);
      if (Val1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Val1);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IntegerValues other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      vals_.Add(other.vals_);
      if (other.Val1 != 0) {
        Val1 = other.Val1;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            vals_.AddEntriesFrom(input, _repeated_vals_codec);
            break;
          }
          case 24: {
            Val1 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public  partial class IntegerValue : pb::IMessage<IntegerValue> {
    private static readonly pb::MessageParser<IntegerValue> _parser = new pb::MessageParser<IntegerValue>(() => new IntegerValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IntegerValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.CommonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntegerValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntegerValue(IntegerValue other) : this() {
      val_ = other.val_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntegerValue Clone() {
      return new IntegerValue(this);
    }

    /// <summary>Field number for the "val" field.</summary>
    public const int ValFieldNumber = 1;
    private int val_;
    /// <summary>
    /// 整型参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Val {
      get { return val_; }
      set {
        val_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IntegerValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IntegerValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Val != other.Val) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Val != 0) hash ^= Val.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Val != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Val);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Val != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Val);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IntegerValue other) {
      if (other == null) {
        return;
      }
      if (other.Val != 0) {
        Val = other.Val;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Val = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 长整型参数
  /// </summary>
  public sealed partial class LongValue : pb::IMessage<LongValue> {
    private static readonly pb::MessageParser<LongValue> _parser = new pb::MessageParser<LongValue>(() => new LongValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LongValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.CommonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LongValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LongValue(LongValue other) : this() {
      val_ = other.val_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LongValue Clone() {
      return new LongValue(this);
    }

    /// <summary>Field number for the "val" field.</summary>
    public const int ValFieldNumber = 1;
    private long val_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Val {
      get { return val_; }
      set {
        val_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LongValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LongValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Val != other.Val) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Val != 0L) hash ^= Val.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Val != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Val);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Val != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Val);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LongValue other) {
      if (other == null) {
        return;
      }
      if (other.Val != 0L) {
        Val = other.Val;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Val = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LongValues : pb::IMessage<LongValues> {
    private static readonly pb::MessageParser<LongValues> _parser = new pb::MessageParser<LongValues>(() => new LongValues());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LongValues> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.CommonReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LongValues() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LongValues(LongValues other) : this() {
      vals_ = other.vals_.Clone();
      id_ = other.id_;
      val1_ = other.val1_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LongValues Clone() {
      return new LongValues(this);
    }

    /// <summary>Field number for the "vals" field.</summary>
    public const int ValsFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_vals_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> vals_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Vals {
      get { return vals_; }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "val1" field.</summary>
    public const int Val1FieldNumber = 3;
    private int val1_;
    /// <summary>
    /// int类型扩展参数1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Val1 {
      get { return val1_; }
      set {
        val1_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LongValues);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LongValues other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!vals_.Equals(other.vals_)) return false;
      if (Id != other.Id) return false;
      if (Val1 != other.Val1) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= vals_.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Val1 != 0) hash ^= Val1.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      vals_.WriteTo(output, _repeated_vals_codec);
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (Val1 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Val1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += vals_.CalculateSize(_repeated_vals_codec);
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Val1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Val1);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LongValues other) {
      if (other == null) {
        return;
      }
      vals_.Add(other.vals_);
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Val1 != 0) {
        Val1 = other.Val1;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            vals_.AddEntriesFrom(input, _repeated_vals_codec);
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            Val1 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TwoIntegerValue : pb::IMessage<TwoIntegerValue> {
    private static readonly pb::MessageParser<TwoIntegerValue> _parser = new pb::MessageParser<TwoIntegerValue>(() => new TwoIntegerValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TwoIntegerValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.CommonReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TwoIntegerValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TwoIntegerValue(TwoIntegerValue other) : this() {
      intVal1_ = other.intVal1_;
      intVal2_ = other.intVal2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TwoIntegerValue Clone() {
      return new TwoIntegerValue(this);
    }

    /// <summary>Field number for the "intVal1" field.</summary>
    public const int IntVal1FieldNumber = 1;
    private int intVal1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IntVal1 {
      get { return intVal1_; }
      set {
        intVal1_ = value;
      }
    }

    /// <summary>Field number for the "intVal2" field.</summary>
    public const int IntVal2FieldNumber = 2;
    private int intVal2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IntVal2 {
      get { return intVal2_; }
      set {
        intVal2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TwoIntegerValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TwoIntegerValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IntVal1 != other.IntVal1) return false;
      if (IntVal2 != other.IntVal2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IntVal1 != 0) hash ^= IntVal1.GetHashCode();
      if (IntVal2 != 0) hash ^= IntVal2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IntVal1 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IntVal1);
      }
      if (IntVal2 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IntVal2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IntVal1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntVal1);
      }
      if (IntVal2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntVal2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TwoIntegerValue other) {
      if (other == null) {
        return;
      }
      if (other.IntVal1 != 0) {
        IntVal1 = other.IntVal1;
      }
      if (other.IntVal2 != 0) {
        IntVal2 = other.IntVal2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IntVal1 = input.ReadInt32();
            break;
          }
          case 16: {
            IntVal2 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TwoIntegerValues : pb::IMessage<TwoIntegerValues> {
    private static readonly pb::MessageParser<TwoIntegerValues> _parser = new pb::MessageParser<TwoIntegerValues>(() => new TwoIntegerValues());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TwoIntegerValues> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.CommonReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TwoIntegerValues() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TwoIntegerValues(TwoIntegerValues other) : this() {
      vals_ = other.vals_.Clone();
      intVal1_ = other.intVal1_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TwoIntegerValues Clone() {
      return new TwoIntegerValues(this);
    }

    /// <summary>Field number for the "vals" field.</summary>
    public const int ValsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Centersdk.Protobuf.TwoIntegerValue> _repeated_vals_codec
        = pb::FieldCodec.ForMessage(10, global::Centersdk.Protobuf.TwoIntegerValue.Parser);
    private readonly pbc::RepeatedField<global::Centersdk.Protobuf.TwoIntegerValue> vals_ = new pbc::RepeatedField<global::Centersdk.Protobuf.TwoIntegerValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Centersdk.Protobuf.TwoIntegerValue> Vals {
      get { return vals_; }
    }

    /// <summary>Field number for the "intVal1" field.</summary>
    public const int IntVal1FieldNumber = 2;
    private int intVal1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IntVal1 {
      get { return intVal1_; }
      set {
        intVal1_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TwoIntegerValues);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TwoIntegerValues other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!vals_.Equals(other.vals_)) return false;
      if (IntVal1 != other.IntVal1) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= vals_.GetHashCode();
      if (IntVal1 != 0) hash ^= IntVal1.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      vals_.WriteTo(output, _repeated_vals_codec);
      if (IntVal1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IntVal1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += vals_.CalculateSize(_repeated_vals_codec);
      if (IntVal1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntVal1);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TwoIntegerValues other) {
      if (other == null) {
        return;
      }
      vals_.Add(other.vals_);
      if (other.IntVal1 != 0) {
        IntVal1 = other.IntVal1;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            vals_.AddEntriesFrom(input, _repeated_vals_codec);
            break;
          }
          case 16: {
            IntVal1 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 两个整型和一个长整型
  /// </summary>
  public sealed partial class TwoIntegerAndLongValue : pb::IMessage<TwoIntegerAndLongValue> {
    private static readonly pb::MessageParser<TwoIntegerAndLongValue> _parser = new pb::MessageParser<TwoIntegerAndLongValue>(() => new TwoIntegerAndLongValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TwoIntegerAndLongValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.CommonReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TwoIntegerAndLongValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TwoIntegerAndLongValue(TwoIntegerAndLongValue other) : this() {
      longVal_ = other.longVal_;
      intVal1_ = other.intVal1_;
      intVal2_ = other.intVal2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TwoIntegerAndLongValue Clone() {
      return new TwoIntegerAndLongValue(this);
    }

    /// <summary>Field number for the "longVal" field.</summary>
    public const int LongValFieldNumber = 1;
    private long longVal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LongVal {
      get { return longVal_; }
      set {
        longVal_ = value;
      }
    }

    /// <summary>Field number for the "intVal1" field.</summary>
    public const int IntVal1FieldNumber = 2;
    private int intVal1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IntVal1 {
      get { return intVal1_; }
      set {
        intVal1_ = value;
      }
    }

    /// <summary>Field number for the "intVal2" field.</summary>
    public const int IntVal2FieldNumber = 3;
    private int intVal2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IntVal2 {
      get { return intVal2_; }
      set {
        intVal2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TwoIntegerAndLongValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TwoIntegerAndLongValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LongVal != other.LongVal) return false;
      if (IntVal1 != other.IntVal1) return false;
      if (IntVal2 != other.IntVal2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LongVal != 0L) hash ^= LongVal.GetHashCode();
      if (IntVal1 != 0) hash ^= IntVal1.GetHashCode();
      if (IntVal2 != 0) hash ^= IntVal2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LongVal != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(LongVal);
      }
      if (IntVal1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IntVal1);
      }
      if (IntVal2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(IntVal2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LongVal != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LongVal);
      }
      if (IntVal1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntVal1);
      }
      if (IntVal2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntVal2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TwoIntegerAndLongValue other) {
      if (other == null) {
        return;
      }
      if (other.LongVal != 0L) {
        LongVal = other.LongVal;
      }
      if (other.IntVal1 != 0) {
        IntVal1 = other.IntVal1;
      }
      if (other.IntVal2 != 0) {
        IntVal2 = other.IntVal2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LongVal = input.ReadInt64();
            break;
          }
          case 16: {
            IntVal1 = input.ReadInt32();
            break;
          }
          case 24: {
            IntVal2 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StringValue : pb::IMessage<StringValue> {
    private static readonly pb::MessageParser<StringValue> _parser = new pb::MessageParser<StringValue>(() => new StringValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StringValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.CommonReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringValue(StringValue other) : this() {
      val_ = other.val_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringValue Clone() {
      return new StringValue(this);
    }

    /// <summary>Field number for the "val" field.</summary>
    public const int ValFieldNumber = 1;
    private string val_ = "";
    /// <summary>
    /// 字符串参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Val {
      get { return val_; }
      set {
        val_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StringValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StringValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Val != other.Val) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Val.Length != 0) hash ^= Val.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Val.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Val);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Val.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Val);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StringValue other) {
      if (other == null) {
        return;
      }
      if (other.Val.Length != 0) {
        Val = other.Val;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Val = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FloatValue : pb::IMessage<FloatValue> {
    private static readonly pb::MessageParser<FloatValue> _parser = new pb::MessageParser<FloatValue>(() => new FloatValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FloatValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.CommonReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FloatValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FloatValue(FloatValue other) : this() {
      val_ = other.val_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FloatValue Clone() {
      return new FloatValue(this);
    }

    /// <summary>Field number for the "val" field.</summary>
    public const int ValFieldNumber = 1;
    private float val_;
    /// <summary>
    /// float参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Val {
      get { return val_; }
      set {
        val_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FloatValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FloatValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Val, other.Val)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Val != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Val);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Val != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Val);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Val != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FloatValue other) {
      if (other == null) {
        return;
      }
      if (other.Val != 0F) {
        Val = other.Val;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Val = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StringValues : pb::IMessage<StringValues> {
    private static readonly pb::MessageParser<StringValues> _parser = new pb::MessageParser<StringValues>(() => new StringValues());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StringValues> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.CommonReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringValues() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringValues(StringValues other) : this() {
      vals_ = other.vals_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringValues Clone() {
      return new StringValues(this);
    }

    /// <summary>Field number for the "vals" field.</summary>
    public const int ValsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_vals_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> vals_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 字符数组参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Vals {
      get { return vals_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StringValues);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StringValues other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!vals_.Equals(other.vals_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= vals_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      vals_.WriteTo(output, _repeated_vals_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += vals_.CalculateSize(_repeated_vals_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StringValues other) {
      if (other == null) {
        return;
      }
      vals_.Add(other.vals_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            vals_.AddEntriesFrom(input, _repeated_vals_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Status : pb::IMessage<Status> {
    private static readonly pb::MessageParser<Status> _parser = new pb::MessageParser<Status>(() => new Status());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Status> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.CommonReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status(Status other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status Clone() {
      return new Status(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Status);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Status other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Status other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
