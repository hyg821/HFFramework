// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: equipment.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Centersdk.Protobuf {

  /// <summary>Holder for reflection information generated from equipment.proto</summary>
  public static partial class EquipmentReflection {

    #region Descriptor
    /// <summary>File descriptor for equipment.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EquipmentReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9lcXVpcG1lbnQucHJvdG8SEmNlbnRlcnNkay5wcm90b2J1ZhoMY29tbW9u",
            "LnByb3RvImEKDUVxdWlwbWVudExpc3QSMQoKZXF1aXBtZW50cxgBIAMoCzId",
            "LmNlbnRlcnNkay5wcm90b2J1Zi5FcXVpcG1lbnQSDwoHYmFnU2l6ZRgCIAEo",
            "BRIMCgRjb2RlGAMgASgFItUBCglFcXVpcG1lbnQSEAoIdW5pcXVlSWQYASAB",
            "KAMSFwoPYmFzaWNBdHRyaWJ1dGVzGAIgAygJEhoKEnN1Y2NpbmN0QXR0cmli",
            "dXRlcxgDIAMoCRIQCghkaWFtb25kcxgEIAMoAxISCgp0ZW1wbGF0ZUlkGAUg",
            "ASgFEg4KBmlzQmluZBgGIAEoCBIaChJzdHJlbmd0aGVuaW5nTGV2ZWwYByAB",
            "KAUSGAoQc3RyZW5ndGhlbmluZ0V4cBgIIAEoBRIVCg1hZHZhbmNlZExldmVs",
            "GAkgASgFIl4KFkVxdWlwbWVudFN0cmVuZ3RoZW5pbmcSMgoFY29zdHMYASAD",
            "KAsyIy5jZW50ZXJzZGsucHJvdG9idWYuVHdvSW50ZWdlclZhbHVlEhAKCHVu",
            "aXF1ZUlkGAIgASgDIkoKFEVxdWlwbWVudFN1Y2NpbmN0UmVxEhAKCGxvY2tM",
            "b2NzGAEgAygFEhAKCHVuaXF1ZUlkGAIgASgDEg4KBmNvc3RJZBgDIAEoBSJx",
            "ChVFcXVpcG1lbnRTdWNjaW5jdFJlc3ASOAoEYXR0cxgBIAMoCzIqLmNlbnRl",
            "cnNkay5wcm90b2J1Zi5Ud29JbnRlZ2VyQW5kTG9uZ1ZhbHVlEhAKCHVuaXF1",
            "ZUlkGAIgASgDEgwKBGNvZGUYAyABKAUiUgoQRXF1aXBtZW50SW5oZXJpdBIw",
            "CgllcXVpcG1lbnQYASABKAsyHS5jZW50ZXJzZGsucHJvdG9idWYuRXF1aXBt",
            "ZW50EgwKBGNvZGUYAiABKAUiUQoPVXBkYXRlRXF1aXBtZW50EjAKCWVxdWlw",
            "bWVudBgBIAEoCzIdLmNlbnRlcnNkay5wcm90b2J1Zi5FcXVpcG1lbnQSDAoE",
            "Y29kZRgCIAEoBUIvCh1jb20uaG9vbGFpLmNlbnRlcnNkay5wcm90b2J1ZkIO",
            "RXF1aXBtZW50UHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Centersdk.Protobuf.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.EquipmentList), global::Centersdk.Protobuf.EquipmentList.Parser, new[]{ "Equipments", "BagSize", "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.Equipment), global::Centersdk.Protobuf.Equipment.Parser, new[]{ "UniqueId", "BasicAttributes", "SuccinctAttributes", "Diamonds", "TemplateId", "IsBind", "StrengtheningLevel", "StrengtheningExp", "AdvancedLevel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.EquipmentStrengthening), global::Centersdk.Protobuf.EquipmentStrengthening.Parser, new[]{ "Costs", "UniqueId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.EquipmentSuccinctReq), global::Centersdk.Protobuf.EquipmentSuccinctReq.Parser, new[]{ "LockLocs", "UniqueId", "CostId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.EquipmentSuccinctResp), global::Centersdk.Protobuf.EquipmentSuccinctResp.Parser, new[]{ "Atts", "UniqueId", "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.EquipmentInherit), global::Centersdk.Protobuf.EquipmentInherit.Parser, new[]{ "Equipment", "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.UpdateEquipment), global::Centersdk.Protobuf.UpdateEquipment.Parser, new[]{ "Equipment", "Code" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 装备列表
  /// </summary>
  public sealed partial class EquipmentList : pb::IMessage<EquipmentList> {
    private static readonly pb::MessageParser<EquipmentList> _parser = new pb::MessageParser<EquipmentList>(() => new EquipmentList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipmentList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.EquipmentReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentList(EquipmentList other) : this() {
      equipments_ = other.equipments_.Clone();
      bagSize_ = other.bagSize_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentList Clone() {
      return new EquipmentList(this);
    }

    /// <summary>Field number for the "equipments" field.</summary>
    public const int EquipmentsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Centersdk.Protobuf.Equipment> _repeated_equipments_codec
        = pb::FieldCodec.ForMessage(10, global::Centersdk.Protobuf.Equipment.Parser);
    private readonly pbc::RepeatedField<global::Centersdk.Protobuf.Equipment> equipments_ = new pbc::RepeatedField<global::Centersdk.Protobuf.Equipment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Centersdk.Protobuf.Equipment> Equipments {
      get { return equipments_; }
    }

    /// <summary>Field number for the "bagSize" field.</summary>
    public const int BagSizeFieldNumber = 2;
    private int bagSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BagSize {
      get { return bagSize_; }
      set {
        bagSize_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 3;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipmentList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipmentList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!equipments_.Equals(other.equipments_)) return false;
      if (BagSize != other.BagSize) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= equipments_.GetHashCode();
      if (BagSize != 0) hash ^= BagSize.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      equipments_.WriteTo(output, _repeated_equipments_codec);
      if (BagSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BagSize);
      }
      if (Code != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += equipments_.CalculateSize(_repeated_equipments_codec);
      if (BagSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BagSize);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipmentList other) {
      if (other == null) {
        return;
      }
      equipments_.Add(other.equipments_);
      if (other.BagSize != 0) {
        BagSize = other.BagSize;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            equipments_.AddEntriesFrom(input, _repeated_equipments_codec);
            break;
          }
          case 16: {
            BagSize = input.ReadInt32();
            break;
          }
          case 24: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Equipment : pb::IMessage<Equipment> {
    private static readonly pb::MessageParser<Equipment> _parser = new pb::MessageParser<Equipment>(() => new Equipment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Equipment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.EquipmentReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Equipment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Equipment(Equipment other) : this() {
      uniqueId_ = other.uniqueId_;
      basicAttributes_ = other.basicAttributes_.Clone();
      succinctAttributes_ = other.succinctAttributes_.Clone();
      diamonds_ = other.diamonds_.Clone();
      templateId_ = other.templateId_;
      isBind_ = other.isBind_;
      strengtheningLevel_ = other.strengtheningLevel_;
      strengtheningExp_ = other.strengtheningExp_;
      advancedLevel_ = other.advancedLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Equipment Clone() {
      return new Equipment(this);
    }

    /// <summary>Field number for the "uniqueId" field.</summary>
    public const int UniqueIdFieldNumber = 1;
    private long uniqueId_;
    /// <summary>
    /// 装备唯一ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UniqueId {
      get { return uniqueId_; }
      set {
        uniqueId_ = value;
      }
    }

    /// <summary>Field number for the "basicAttributes" field.</summary>
    public const int BasicAttributesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_basicAttributes_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> basicAttributes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 基础属性 属性格式：属性类型1:属性值1;属性类型2:属性值2;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BasicAttributes {
      get { return basicAttributes_; }
    }

    /// <summary>Field number for the "succinctAttributes" field.</summary>
    public const int SuccinctAttributesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_succinctAttributes_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> succinctAttributes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 洗练属性 属性格式：属性类型1:属性值1;属性类型2:属性值2;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SuccinctAttributes {
      get { return succinctAttributes_; }
    }

    /// <summary>Field number for the "diamonds" field.</summary>
    public const int DiamondsFieldNumber = 4;
    private static readonly pb::FieldCodec<long> _repeated_diamonds_codec
        = pb::FieldCodec.ForInt64(34);
    private readonly pbc::RepeatedField<long> diamonds_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 镶嵌宝石 宝石唯一ID列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Diamonds {
      get { return diamonds_; }
    }

    /// <summary>Field number for the "templateId" field.</summary>
    public const int TemplateIdFieldNumber = 5;
    private int templateId_;
    /// <summary>
    /// 装备模板ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TemplateId {
      get { return templateId_; }
      set {
        templateId_ = value;
      }
    }

    /// <summary>Field number for the "isBind" field.</summary>
    public const int IsBindFieldNumber = 6;
    private bool isBind_;
    /// <summary>
    /// 是否绑定状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBind {
      get { return isBind_; }
      set {
        isBind_ = value;
      }
    }

    /// <summary>Field number for the "strengtheningLevel" field.</summary>
    public const int StrengtheningLevelFieldNumber = 7;
    private int strengtheningLevel_;
    /// <summary>
    /// 强化等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StrengtheningLevel {
      get { return strengtheningLevel_; }
      set {
        strengtheningLevel_ = value;
      }
    }

    /// <summary>Field number for the "strengtheningExp" field.</summary>
    public const int StrengtheningExpFieldNumber = 8;
    private int strengtheningExp_;
    /// <summary>
    /// 强化等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StrengtheningExp {
      get { return strengtheningExp_; }
      set {
        strengtheningExp_ = value;
      }
    }

    /// <summary>Field number for the "advancedLevel" field.</summary>
    public const int AdvancedLevelFieldNumber = 9;
    private int advancedLevel_;
    /// <summary>
    /// 进阶等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AdvancedLevel {
      get { return advancedLevel_; }
      set {
        advancedLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Equipment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Equipment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UniqueId != other.UniqueId) return false;
      if(!basicAttributes_.Equals(other.basicAttributes_)) return false;
      if(!succinctAttributes_.Equals(other.succinctAttributes_)) return false;
      if(!diamonds_.Equals(other.diamonds_)) return false;
      if (TemplateId != other.TemplateId) return false;
      if (IsBind != other.IsBind) return false;
      if (StrengtheningLevel != other.StrengtheningLevel) return false;
      if (StrengtheningExp != other.StrengtheningExp) return false;
      if (AdvancedLevel != other.AdvancedLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UniqueId != 0L) hash ^= UniqueId.GetHashCode();
      hash ^= basicAttributes_.GetHashCode();
      hash ^= succinctAttributes_.GetHashCode();
      hash ^= diamonds_.GetHashCode();
      if (TemplateId != 0) hash ^= TemplateId.GetHashCode();
      if (IsBind != false) hash ^= IsBind.GetHashCode();
      if (StrengtheningLevel != 0) hash ^= StrengtheningLevel.GetHashCode();
      if (StrengtheningExp != 0) hash ^= StrengtheningExp.GetHashCode();
      if (AdvancedLevel != 0) hash ^= AdvancedLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UniqueId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UniqueId);
      }
      basicAttributes_.WriteTo(output, _repeated_basicAttributes_codec);
      succinctAttributes_.WriteTo(output, _repeated_succinctAttributes_codec);
      diamonds_.WriteTo(output, _repeated_diamonds_codec);
      if (TemplateId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TemplateId);
      }
      if (IsBind != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsBind);
      }
      if (StrengtheningLevel != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(StrengtheningLevel);
      }
      if (StrengtheningExp != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(StrengtheningExp);
      }
      if (AdvancedLevel != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(AdvancedLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UniqueId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UniqueId);
      }
      size += basicAttributes_.CalculateSize(_repeated_basicAttributes_codec);
      size += succinctAttributes_.CalculateSize(_repeated_succinctAttributes_codec);
      size += diamonds_.CalculateSize(_repeated_diamonds_codec);
      if (TemplateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TemplateId);
      }
      if (IsBind != false) {
        size += 1 + 1;
      }
      if (StrengtheningLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StrengtheningLevel);
      }
      if (StrengtheningExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StrengtheningExp);
      }
      if (AdvancedLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AdvancedLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Equipment other) {
      if (other == null) {
        return;
      }
      if (other.UniqueId != 0L) {
        UniqueId = other.UniqueId;
      }
      basicAttributes_.Add(other.basicAttributes_);
      succinctAttributes_.Add(other.succinctAttributes_);
      diamonds_.Add(other.diamonds_);
      if (other.TemplateId != 0) {
        TemplateId = other.TemplateId;
      }
      if (other.IsBind != false) {
        IsBind = other.IsBind;
      }
      if (other.StrengtheningLevel != 0) {
        StrengtheningLevel = other.StrengtheningLevel;
      }
      if (other.StrengtheningExp != 0) {
        StrengtheningExp = other.StrengtheningExp;
      }
      if (other.AdvancedLevel != 0) {
        AdvancedLevel = other.AdvancedLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UniqueId = input.ReadInt64();
            break;
          }
          case 18: {
            basicAttributes_.AddEntriesFrom(input, _repeated_basicAttributes_codec);
            break;
          }
          case 26: {
            succinctAttributes_.AddEntriesFrom(input, _repeated_succinctAttributes_codec);
            break;
          }
          case 34:
          case 32: {
            diamonds_.AddEntriesFrom(input, _repeated_diamonds_codec);
            break;
          }
          case 40: {
            TemplateId = input.ReadInt32();
            break;
          }
          case 48: {
            IsBind = input.ReadBool();
            break;
          }
          case 56: {
            StrengtheningLevel = input.ReadInt32();
            break;
          }
          case 64: {
            StrengtheningExp = input.ReadInt32();
            break;
          }
          case 72: {
            AdvancedLevel = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 装备强化
  /// </summary>
  public sealed partial class EquipmentStrengthening : pb::IMessage<EquipmentStrengthening> {
    private static readonly pb::MessageParser<EquipmentStrengthening> _parser = new pb::MessageParser<EquipmentStrengthening>(() => new EquipmentStrengthening());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipmentStrengthening> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.EquipmentReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentStrengthening() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentStrengthening(EquipmentStrengthening other) : this() {
      costs_ = other.costs_.Clone();
      uniqueId_ = other.uniqueId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentStrengthening Clone() {
      return new EquipmentStrengthening(this);
    }

    /// <summary>Field number for the "costs" field.</summary>
    public const int CostsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Centersdk.Protobuf.TwoIntegerValue> _repeated_costs_codec
        = pb::FieldCodec.ForMessage(10, global::Centersdk.Protobuf.TwoIntegerValue.Parser);
    private readonly pbc::RepeatedField<global::Centersdk.Protobuf.TwoIntegerValue> costs_ = new pbc::RepeatedField<global::Centersdk.Protobuf.TwoIntegerValue>();
    /// <summary>
    /// 强化石消耗列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Centersdk.Protobuf.TwoIntegerValue> Costs {
      get { return costs_; }
    }

    /// <summary>Field number for the "uniqueId" field.</summary>
    public const int UniqueIdFieldNumber = 2;
    private long uniqueId_;
    /// <summary>
    /// 强化装备ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UniqueId {
      get { return uniqueId_; }
      set {
        uniqueId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipmentStrengthening);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipmentStrengthening other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!costs_.Equals(other.costs_)) return false;
      if (UniqueId != other.UniqueId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= costs_.GetHashCode();
      if (UniqueId != 0L) hash ^= UniqueId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      costs_.WriteTo(output, _repeated_costs_codec);
      if (UniqueId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UniqueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += costs_.CalculateSize(_repeated_costs_codec);
      if (UniqueId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UniqueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipmentStrengthening other) {
      if (other == null) {
        return;
      }
      costs_.Add(other.costs_);
      if (other.UniqueId != 0L) {
        UniqueId = other.UniqueId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            costs_.AddEntriesFrom(input, _repeated_costs_codec);
            break;
          }
          case 16: {
            UniqueId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 装备洗练请求
  /// </summary>
  public sealed partial class EquipmentSuccinctReq : pb::IMessage<EquipmentSuccinctReq> {
    private static readonly pb::MessageParser<EquipmentSuccinctReq> _parser = new pb::MessageParser<EquipmentSuccinctReq>(() => new EquipmentSuccinctReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipmentSuccinctReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.EquipmentReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentSuccinctReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentSuccinctReq(EquipmentSuccinctReq other) : this() {
      lockLocs_ = other.lockLocs_.Clone();
      uniqueId_ = other.uniqueId_;
      costId_ = other.costId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentSuccinctReq Clone() {
      return new EquipmentSuccinctReq(this);
    }

    /// <summary>Field number for the "lockLocs" field.</summary>
    public const int LockLocsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_lockLocs_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> lockLocs_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 属性锁定位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> LockLocs {
      get { return lockLocs_; }
    }

    /// <summary>Field number for the "uniqueId" field.</summary>
    public const int UniqueIdFieldNumber = 2;
    private long uniqueId_;
    /// <summary>
    /// 装备唯一ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UniqueId {
      get { return uniqueId_; }
      set {
        uniqueId_ = value;
      }
    }

    /// <summary>Field number for the "costId" field.</summary>
    public const int CostIdFieldNumber = 3;
    private int costId_;
    /// <summary>
    /// 消耗洗练石ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CostId {
      get { return costId_; }
      set {
        costId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipmentSuccinctReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipmentSuccinctReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lockLocs_.Equals(other.lockLocs_)) return false;
      if (UniqueId != other.UniqueId) return false;
      if (CostId != other.CostId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lockLocs_.GetHashCode();
      if (UniqueId != 0L) hash ^= UniqueId.GetHashCode();
      if (CostId != 0) hash ^= CostId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lockLocs_.WriteTo(output, _repeated_lockLocs_codec);
      if (UniqueId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UniqueId);
      }
      if (CostId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CostId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lockLocs_.CalculateSize(_repeated_lockLocs_codec);
      if (UniqueId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UniqueId);
      }
      if (CostId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CostId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipmentSuccinctReq other) {
      if (other == null) {
        return;
      }
      lockLocs_.Add(other.lockLocs_);
      if (other.UniqueId != 0L) {
        UniqueId = other.UniqueId;
      }
      if (other.CostId != 0) {
        CostId = other.CostId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            lockLocs_.AddEntriesFrom(input, _repeated_lockLocs_codec);
            break;
          }
          case 16: {
            UniqueId = input.ReadInt64();
            break;
          }
          case 24: {
            CostId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 装备洗练应答
  /// </summary>
  public sealed partial class EquipmentSuccinctResp : pb::IMessage<EquipmentSuccinctResp> {
    private static readonly pb::MessageParser<EquipmentSuccinctResp> _parser = new pb::MessageParser<EquipmentSuccinctResp>(() => new EquipmentSuccinctResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipmentSuccinctResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.EquipmentReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentSuccinctResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentSuccinctResp(EquipmentSuccinctResp other) : this() {
      atts_ = other.atts_.Clone();
      uniqueId_ = other.uniqueId_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentSuccinctResp Clone() {
      return new EquipmentSuccinctResp(this);
    }

    /// <summary>Field number for the "atts" field.</summary>
    public const int AttsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Centersdk.Protobuf.TwoIntegerAndLongValue> _repeated_atts_codec
        = pb::FieldCodec.ForMessage(10, global::Centersdk.Protobuf.TwoIntegerAndLongValue.Parser);
    private readonly pbc::RepeatedField<global::Centersdk.Protobuf.TwoIntegerAndLongValue> atts_ = new pbc::RepeatedField<global::Centersdk.Protobuf.TwoIntegerAndLongValue>();
    /// <summary>
    /// 洗练属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Centersdk.Protobuf.TwoIntegerAndLongValue> Atts {
      get { return atts_; }
    }

    /// <summary>Field number for the "uniqueId" field.</summary>
    public const int UniqueIdFieldNumber = 2;
    private long uniqueId_;
    /// <summary>
    /// 装备唯一ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UniqueId {
      get { return uniqueId_; }
      set {
        uniqueId_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 3;
    private int code_;
    /// <summary>
    /// 错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipmentSuccinctResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipmentSuccinctResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!atts_.Equals(other.atts_)) return false;
      if (UniqueId != other.UniqueId) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= atts_.GetHashCode();
      if (UniqueId != 0L) hash ^= UniqueId.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      atts_.WriteTo(output, _repeated_atts_codec);
      if (UniqueId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UniqueId);
      }
      if (Code != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += atts_.CalculateSize(_repeated_atts_codec);
      if (UniqueId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UniqueId);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipmentSuccinctResp other) {
      if (other == null) {
        return;
      }
      atts_.Add(other.atts_);
      if (other.UniqueId != 0L) {
        UniqueId = other.UniqueId;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            atts_.AddEntriesFrom(input, _repeated_atts_codec);
            break;
          }
          case 16: {
            UniqueId = input.ReadInt64();
            break;
          }
          case 24: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 装备继承
  /// </summary>
  public sealed partial class EquipmentInherit : pb::IMessage<EquipmentInherit> {
    private static readonly pb::MessageParser<EquipmentInherit> _parser = new pb::MessageParser<EquipmentInherit>(() => new EquipmentInherit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipmentInherit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.EquipmentReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentInherit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentInherit(EquipmentInherit other) : this() {
      equipment_ = other.equipment_ != null ? other.equipment_.Clone() : null;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentInherit Clone() {
      return new EquipmentInherit(this);
    }

    /// <summary>Field number for the "equipment" field.</summary>
    public const int EquipmentFieldNumber = 1;
    private global::Centersdk.Protobuf.Equipment equipment_;
    /// <summary>
    /// 继承后的装备
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Centersdk.Protobuf.Equipment Equipment {
      get { return equipment_; }
      set {
        equipment_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private int code_;
    /// <summary>
    /// 错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipmentInherit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipmentInherit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Equipment, other.Equipment)) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (equipment_ != null) hash ^= Equipment.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (equipment_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Equipment);
      }
      if (Code != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (equipment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Equipment);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipmentInherit other) {
      if (other == null) {
        return;
      }
      if (other.equipment_ != null) {
        if (equipment_ == null) {
          equipment_ = new global::Centersdk.Protobuf.Equipment();
        }
        Equipment.MergeFrom(other.Equipment);
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (equipment_ == null) {
              equipment_ = new global::Centersdk.Protobuf.Equipment();
            }
            input.ReadMessage(equipment_);
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateEquipment : pb::IMessage<UpdateEquipment> {
    private static readonly pb::MessageParser<UpdateEquipment> _parser = new pb::MessageParser<UpdateEquipment>(() => new UpdateEquipment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateEquipment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.EquipmentReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateEquipment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateEquipment(UpdateEquipment other) : this() {
      equipment_ = other.equipment_ != null ? other.equipment_.Clone() : null;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateEquipment Clone() {
      return new UpdateEquipment(this);
    }

    /// <summary>Field number for the "equipment" field.</summary>
    public const int EquipmentFieldNumber = 1;
    private global::Centersdk.Protobuf.Equipment equipment_;
    /// <summary>
    /// 装备信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Centersdk.Protobuf.Equipment Equipment {
      get { return equipment_; }
      set {
        equipment_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private int code_;
    /// <summary>
    /// 错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateEquipment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateEquipment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Equipment, other.Equipment)) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (equipment_ != null) hash ^= Equipment.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (equipment_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Equipment);
      }
      if (Code != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (equipment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Equipment);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateEquipment other) {
      if (other == null) {
        return;
      }
      if (other.equipment_ != null) {
        if (equipment_ == null) {
          equipment_ = new global::Centersdk.Protobuf.Equipment();
        }
        Equipment.MergeFrom(other.Equipment);
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (equipment_ == null) {
              equipment_ = new global::Centersdk.Protobuf.Equipment();
            }
            input.ReadMessage(equipment_);
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
