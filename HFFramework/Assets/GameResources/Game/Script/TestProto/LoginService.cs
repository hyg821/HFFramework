// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: login_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Loginservice.Protobuf {

  /// <summary>Holder for reflection information generated from login_service.proto</summary>
  public static partial class LoginServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for login_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LoginServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNsb2dpbl9zZXJ2aWNlLnByb3RvEhVsb2dpbnNlcnZpY2UucHJvdG9idWYi",
            "3AEKDExvZ2luUmVxdWVzdBIOCgZvcGVuSWQYASABKAkSEgoKcHJvZHVjdF9p",
            "ZBgCIAEoCRIKCgJwZhgDIAEoCRIPCgdjaGFubmVsGAQgASgJEhMKC2NoYW5u",
            "ZWxfdWlkGAUgASgJEhQKDGFjY2Vzc190b2tlbhgGIAEoCRIRCgljaGFubmVs",
            "SWQYByABKAkSDwoHdmVyc2lvbhgIIAEoCRISCgpwaG9uZV90eXBlGAkgASgJ",
            "EgwKBGlkZmEYCiABKAkSDAoEaWRmdhgLIAEoCRIMCgRpbWVpGAwgASgJIkwK",
            "DUxvZ2luUmVzcG9uc2USDAoEY29kZRgBIAEoBRItCgZzZXJ2ZXIYAiABKAsy",
            "HS5sb2dpbnNlcnZpY2UucHJvdG9idWYuU2VydmVyIj0KC1NlcnZlckFycmF5",
            "Ei4KB3NlcnZlcnMYASADKAsyHS5sb2dpbnNlcnZpY2UucHJvdG9idWYuU2Vy",
            "dmVyInMKBlNlcnZlchIOCgZ6b25lSWQYASABKAUSEAoIem9uZU5hbWUYAiAB",
            "KAkSEAoIc2VydmVySWQYAyABKAUSEgoKc2VydmVyTmFtZRgEIAEoCRIOCgZz",
            "dGF0dXMYBSABKAUSEQoJdXNlckNvdW50GAYgASgFQjYKIWNvbS5ob29sYWku",
            "bmV3Z2FtZS5sb2dpbi5wcm90b2J1ZkIRTG9naW5TZXJ2aWNlUHJvdG9iBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Loginservice.Protobuf.LoginRequest), global::Loginservice.Protobuf.LoginRequest.Parser, new[]{ "OpenId", "ProductId", "Pf", "Channel", "ChannelUid", "AccessToken", "ChannelId", "Version", "PhoneType", "Idfa", "Idfv", "Imei" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loginservice.Protobuf.LoginResponse), global::Loginservice.Protobuf.LoginResponse.Parser, new[]{ "Code", "Server" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loginservice.Protobuf.ServerArray), global::Loginservice.Protobuf.ServerArray.Parser, new[]{ "Servers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loginservice.Protobuf.Server), global::Loginservice.Protobuf.Server.Parser, new[]{ "ZoneId", "ZoneName", "ServerId", "ServerName", "Status", "UserCount" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///用户登录请求信息
  /// </summary>
  public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loginservice.Protobuf.LoginServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      openId_ = other.openId_;
      productId_ = other.productId_;
      pf_ = other.pf_;
      channel_ = other.channel_;
      channelUid_ = other.channelUid_;
      accessToken_ = other.accessToken_;
      channelId_ = other.channelId_;
      version_ = other.version_;
      phoneType_ = other.phoneType_;
      idfa_ = other.idfa_;
      idfv_ = other.idfv_;
      imei_ = other.imei_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "openId" field.</summary>
    public const int OpenIdFieldNumber = 1;
    private string openId_ = "";
    /// <summary>
    /// 用户唯一标识。(一般是用户登录后，游戏客户端获取的uid)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OpenId {
      get { return openId_; }
      set {
        openId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 2;
    private string productId_ = "";
    /// <summary>
    /// 该产品的产品id (客户端代码:FastSdk.getChannelInterface().getChannelInfo().getProductId())
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductId {
      get { return productId_; }
      set {
        productId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pf" field.</summary>
    public const int PfFieldNumber = 3;
    private string pf_ = "";
    /// <summary>
    /// 平台信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pf {
      get { return pf_; }
      set {
        pf_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 4;
    private string channel_ = "";
    /// <summary>
    /// 用户登录后，游戏客户端获取的channel
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel_uid" field.</summary>
    public const int ChannelUidFieldNumber = 5;
    private string channelUid_ = "";
    /// <summary>
    /// 用户登录后，游戏客户端获取的channelUid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChannelUid {
      get { return channelUid_; }
      set {
        channelUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "access_token" field.</summary>
    public const int AccessTokenFieldNumber = 6;
    private string accessToken_ = "";
    /// <summary>
    /// 用户登录后，游戏客户端获取的登陆令牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channelId" field.</summary>
    public const int ChannelIdFieldNumber = 7;
    private string channelId_ = "";
    /// <summary>
    /// 渠道ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChannelId {
      get { return channelId_; }
      set {
        channelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 8;
    private string version_ = "";
    /// <summary>
    /// 用户登录版本号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phone_type" field.</summary>
    public const int PhoneTypeFieldNumber = 9;
    private string phoneType_ = "";
    /// <summary>
    /// 手机型号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneType {
      get { return phoneType_; }
      set {
        phoneType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idfa" field.</summary>
    public const int IdfaFieldNumber = 10;
    private string idfa_ = "";
    /// <summary>
    /// 广告标示符
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Idfa {
      get { return idfa_; }
      set {
        idfa_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idfv" field.</summary>
    public const int IdfvFieldNumber = 11;
    private string idfv_ = "";
    /// <summary>
    /// Vindor标示符
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Idfv {
      get { return idfv_; }
      set {
        idfv_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "imei" field.</summary>
    public const int ImeiFieldNumber = 12;
    private string imei_ = "";
    /// <summary>
    /// 手机的唯一识别号码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Imei {
      get { return imei_; }
      set {
        imei_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OpenId != other.OpenId) return false;
      if (ProductId != other.ProductId) return false;
      if (Pf != other.Pf) return false;
      if (Channel != other.Channel) return false;
      if (ChannelUid != other.ChannelUid) return false;
      if (AccessToken != other.AccessToken) return false;
      if (ChannelId != other.ChannelId) return false;
      if (Version != other.Version) return false;
      if (PhoneType != other.PhoneType) return false;
      if (Idfa != other.Idfa) return false;
      if (Idfv != other.Idfv) return false;
      if (Imei != other.Imei) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OpenId.Length != 0) hash ^= OpenId.GetHashCode();
      if (ProductId.Length != 0) hash ^= ProductId.GetHashCode();
      if (Pf.Length != 0) hash ^= Pf.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (ChannelUid.Length != 0) hash ^= ChannelUid.GetHashCode();
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      if (ChannelId.Length != 0) hash ^= ChannelId.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (PhoneType.Length != 0) hash ^= PhoneType.GetHashCode();
      if (Idfa.Length != 0) hash ^= Idfa.GetHashCode();
      if (Idfv.Length != 0) hash ^= Idfv.GetHashCode();
      if (Imei.Length != 0) hash ^= Imei.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OpenId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OpenId);
      }
      if (ProductId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProductId);
      }
      if (Pf.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Pf);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Channel);
      }
      if (ChannelUid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ChannelUid);
      }
      if (AccessToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AccessToken);
      }
      if (ChannelId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ChannelId);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Version);
      }
      if (PhoneType.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(PhoneType);
      }
      if (Idfa.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Idfa);
      }
      if (Idfv.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Idfv);
      }
      if (Imei.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Imei);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OpenId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OpenId);
      }
      if (ProductId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductId);
      }
      if (Pf.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pf);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (ChannelUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelUid);
      }
      if (AccessToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (ChannelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelId);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (PhoneType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneType);
      }
      if (Idfa.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Idfa);
      }
      if (Idfv.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Idfv);
      }
      if (Imei.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Imei);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.OpenId.Length != 0) {
        OpenId = other.OpenId;
      }
      if (other.ProductId.Length != 0) {
        ProductId = other.ProductId;
      }
      if (other.Pf.Length != 0) {
        Pf = other.Pf;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.ChannelUid.Length != 0) {
        ChannelUid = other.ChannelUid;
      }
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      if (other.ChannelId.Length != 0) {
        ChannelId = other.ChannelId;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.PhoneType.Length != 0) {
        PhoneType = other.PhoneType;
      }
      if (other.Idfa.Length != 0) {
        Idfa = other.Idfa;
      }
      if (other.Idfv.Length != 0) {
        Idfv = other.Idfv;
      }
      if (other.Imei.Length != 0) {
        Imei = other.Imei;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OpenId = input.ReadString();
            break;
          }
          case 18: {
            ProductId = input.ReadString();
            break;
          }
          case 26: {
            Pf = input.ReadString();
            break;
          }
          case 34: {
            Channel = input.ReadString();
            break;
          }
          case 42: {
            ChannelUid = input.ReadString();
            break;
          }
          case 50: {
            AccessToken = input.ReadString();
            break;
          }
          case 58: {
            ChannelId = input.ReadString();
            break;
          }
          case 66: {
            Version = input.ReadString();
            break;
          }
          case 74: {
            PhoneType = input.ReadString();
            break;
          }
          case 82: {
            Idfa = input.ReadString();
            break;
          }
          case 90: {
            Idfv = input.ReadString();
            break;
          }
          case 98: {
            Imei = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///用户登录响应信息
  /// </summary>
  public sealed partial class LoginResponse : pb::IMessage<LoginResponse> {
    private static readonly pb::MessageParser<LoginResponse> _parser = new pb::MessageParser<LoginResponse>(() => new LoginResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loginservice.Protobuf.LoginServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse(LoginResponse other) : this() {
      code_ = other.code_;
      server_ = other.server_ != null ? other.server_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse Clone() {
      return new LoginResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    /// <summary>
    /// 登录码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "server" field.</summary>
    public const int ServerFieldNumber = 2;
    private global::Loginservice.Protobuf.Server server_;
    /// <summary>
    /// 上次登录服务器信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loginservice.Protobuf.Server Server {
      get { return server_; }
      set {
        server_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Server, other.Server)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (server_ != null) hash ^= Server.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (server_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Server);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (server_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Server);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.server_ != null) {
        if (server_ == null) {
          server_ = new global::Loginservice.Protobuf.Server();
        }
        Server.MergeFrom(other.Server);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (server_ == null) {
              server_ = new global::Loginservice.Protobuf.Server();
            }
            input.ReadMessage(server_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerArray : pb::IMessage<ServerArray> {
    private static readonly pb::MessageParser<ServerArray> _parser = new pb::MessageParser<ServerArray>(() => new ServerArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loginservice.Protobuf.LoginServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerArray(ServerArray other) : this() {
      servers_ = other.servers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerArray Clone() {
      return new ServerArray(this);
    }

    /// <summary>Field number for the "servers" field.</summary>
    public const int ServersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Loginservice.Protobuf.Server> _repeated_servers_codec
        = pb::FieldCodec.ForMessage(10, global::Loginservice.Protobuf.Server.Parser);
    private readonly pbc::RepeatedField<global::Loginservice.Protobuf.Server> servers_ = new pbc::RepeatedField<global::Loginservice.Protobuf.Server>();
    /// <summary>
    ///服务列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Loginservice.Protobuf.Server> Servers {
      get { return servers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!servers_.Equals(other.servers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= servers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      servers_.WriteTo(output, _repeated_servers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += servers_.CalculateSize(_repeated_servers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerArray other) {
      if (other == null) {
        return;
      }
      servers_.Add(other.servers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            servers_.AddEntriesFrom(input, _repeated_servers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Server : pb::IMessage<Server> {
    private static readonly pb::MessageParser<Server> _parser = new pb::MessageParser<Server>(() => new Server());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Server> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loginservice.Protobuf.LoginServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Server() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Server(Server other) : this() {
      zoneId_ = other.zoneId_;
      zoneName_ = other.zoneName_;
      serverId_ = other.serverId_;
      serverName_ = other.serverName_;
      status_ = other.status_;
      userCount_ = other.userCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Server Clone() {
      return new Server(this);
    }

    /// <summary>Field number for the "zoneId" field.</summary>
    public const int ZoneIdFieldNumber = 1;
    private int zoneId_;
    /// <summary>
    ///大区ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = value;
      }
    }

    /// <summary>Field number for the "zoneName" field.</summary>
    public const int ZoneNameFieldNumber = 2;
    private string zoneName_ = "";
    /// <summary>
    ///大区名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZoneName {
      get { return zoneName_; }
      set {
        zoneName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "serverId" field.</summary>
    public const int ServerIdFieldNumber = 3;
    private int serverId_;
    /// <summary>
    ///服务器ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServerId {
      get { return serverId_; }
      set {
        serverId_ = value;
      }
    }

    /// <summary>Field number for the "serverName" field.</summary>
    public const int ServerNameFieldNumber = 4;
    private string serverName_ = "";
    /// <summary>
    ///服务器名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerName {
      get { return serverName_; }
      set {
        serverName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private int status_;
    /// <summary>
    ///服务器状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "userCount" field.</summary>
    public const int UserCountFieldNumber = 6;
    private int userCount_;
    /// <summary>
    ///在线用户数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserCount {
      get { return userCount_; }
      set {
        userCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Server);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Server other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ZoneId != other.ZoneId) return false;
      if (ZoneName != other.ZoneName) return false;
      if (ServerId != other.ServerId) return false;
      if (ServerName != other.ServerName) return false;
      if (Status != other.Status) return false;
      if (UserCount != other.UserCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ZoneId != 0) hash ^= ZoneId.GetHashCode();
      if (ZoneName.Length != 0) hash ^= ZoneName.GetHashCode();
      if (ServerId != 0) hash ^= ServerId.GetHashCode();
      if (ServerName.Length != 0) hash ^= ServerName.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (UserCount != 0) hash ^= UserCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ZoneId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ZoneId);
      }
      if (ZoneName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ZoneName);
      }
      if (ServerId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ServerId);
      }
      if (ServerName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ServerName);
      }
      if (Status != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Status);
      }
      if (UserCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(UserCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ZoneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZoneId);
      }
      if (ZoneName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZoneName);
      }
      if (ServerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerId);
      }
      if (ServerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerName);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (UserCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Server other) {
      if (other == null) {
        return;
      }
      if (other.ZoneId != 0) {
        ZoneId = other.ZoneId;
      }
      if (other.ZoneName.Length != 0) {
        ZoneName = other.ZoneName;
      }
      if (other.ServerId != 0) {
        ServerId = other.ServerId;
      }
      if (other.ServerName.Length != 0) {
        ServerName = other.ServerName;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.UserCount != 0) {
        UserCount = other.UserCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ZoneId = input.ReadInt32();
            break;
          }
          case 18: {
            ZoneName = input.ReadString();
            break;
          }
          case 24: {
            ServerId = input.ReadInt32();
            break;
          }
          case 34: {
            ServerName = input.ReadString();
            break;
          }
          case 40: {
            Status = input.ReadInt32();
            break;
          }
          case 48: {
            UserCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
