// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mail.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Centersdk.Protobuf {

  /// <summary>Holder for reflection information generated from mail.proto</summary>
  public static partial class MailReflection {

    #region Descriptor
    /// <summary>File descriptor for mail.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MailReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgptYWlsLnByb3RvEhJjZW50ZXJzZGsucHJvdG9idWYaF2hhbmdpbmctZXF1",
            "aXBtZW50LnByb3RvGgppdGVtLnByb3RvIncKCkF0dGFjaG1lbnQSDAoEdHlw",
            "ZRgBIAEoBRImCgRpdGVtGAIgASgLMhguY2VudGVyc2RrLnByb3RvYnVmLkl0",
            "ZW0SMwoFZXF1aXAYAyABKAsyJC5jZW50ZXJzZGsucHJvdG9idWYuSGFuZ2lu",
            "Z0VxdWlwbWVudCKvAgoETWFpbBITCgtjcmVhdGVfdGltZRgBIAEoAxITCgtl",
            "eHBpcmVfdGltZRgCIAEoAxISCgpyZWFkX3N0YXRlGAMgASgFEhQKDGF0dGFj",
            "aF9zdGF0ZRgEIAEoBRIRCglzZW5kZXJfaWQYBSABKAMSEwoLc2VuZGVyX25h",
            "bWUYBiABKAkSEwoLc2VuZGVyX2hlYWQYByABKAUSEwoLcmVjZWl2ZXJfaWQY",
            "CCABKAMSFQoNcmVjZWl2ZXJfbmFtZRgJIAEoCRIVCg1yZWNlaXZlcl9oZWFk",
            "GAogASgFEg0KBXRpdGxlGAsgASgJEg8KB2NvbnRlbnQYDCABKAkSMwoLYXR0",
            "YWNobWVudHMYDSADKAsyHi5jZW50ZXJzZGsucHJvdG9idWYuQXR0YWNobWVu",
            "dCJDCghNYWlsTGlzdBIPCgd1c2VyX2lkGAEgASgDEiYKBGRhdGEYAiADKAsy",
            "GC5jZW50ZXJzZGsucHJvdG9idWYuTWFpbCJhCg1OZXdBdHRhY2htZW50EgwK",
            "BHR5cGUYASABKAUSDAoEa2luZBgCIAEoCRINCgVpbmRleBgDIAEoBRISCgpp",
            "dGVtX2NvdW50GAQgASgFEhEKCXVuaXF1ZV9pZBgFIAEoAyJ2CgdOZXdNYWls",
            "EhMKC3JlY2VpdmVyX2lkGAEgASgDEg0KBXRpdGxlGAIgASgJEg8KB2NvbnRl",
            "bnQYAyABKAkSNgoLYXR0YWNobWVudHMYBCADKAsyIS5jZW50ZXJzZGsucHJv",
            "dG9idWYuTmV3QXR0YWNobWVudCIxCgxNYWlsQmF0Y2hSZXESCwoDYm94GAEg",
            "ASgJEhQKDGNyZWF0ZV90aW1lcxgCIAMoA0IqCh1jb20uaG9vbGFpLmNlbnRl",
            "cnNkay5wcm90b2J1ZkIJTWFpbFByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Centersdk.Protobuf.HangingEquipmentReflection.Descriptor, global::Centersdk.Protobuf.ItemReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.Attachment), global::Centersdk.Protobuf.Attachment.Parser, new[]{ "Type", "Item", "Equip" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.Mail), global::Centersdk.Protobuf.Mail.Parser, new[]{ "CreateTime", "ExpireTime", "ReadState", "AttachState", "SenderId", "SenderName", "SenderHead", "ReceiverId", "ReceiverName", "ReceiverHead", "Title", "Content", "Attachments" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.MailList), global::Centersdk.Protobuf.MailList.Parser, new[]{ "UserId", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.NewAttachment), global::Centersdk.Protobuf.NewAttachment.Parser, new[]{ "Type", "Kind", "Index", "ItemCount", "UniqueId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.NewMail), global::Centersdk.Protobuf.NewMail.Parser, new[]{ "ReceiverId", "Title", "Content", "Attachments" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.MailBatchReq), global::Centersdk.Protobuf.MailBatchReq.Parser, new[]{ "Box", "CreateTimes" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Attachment : pb::IMessage<Attachment> {
    private static readonly pb::MessageParser<Attachment> _parser = new pb::MessageParser<Attachment>(() => new Attachment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Attachment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.MailReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attachment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attachment(Attachment other) : this() {
      type_ = other.type_;
      item_ = other.item_ != null ? other.item_.Clone() : null;
      equip_ = other.equip_ != null ? other.equip_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attachment Clone() {
      return new Attachment(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    /// 附件类型，1 = 道具，2 = 装备
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private global::Centersdk.Protobuf.Item item_;
    /// <summary>
    /// 道具
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Centersdk.Protobuf.Item Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "equip" field.</summary>
    public const int EquipFieldNumber = 3;
    private global::Centersdk.Protobuf.HangingEquipment equip_;
    /// <summary>
    /// 装备
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Centersdk.Protobuf.HangingEquipment Equip {
      get { return equip_; }
      set {
        equip_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Attachment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Attachment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Item, other.Item)) return false;
      if (!object.Equals(Equip, other.Equip)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (item_ != null) hash ^= Item.GetHashCode();
      if (equip_ != null) hash ^= Equip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (item_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Item);
      }
      if (equip_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Equip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (equip_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Equip);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Attachment other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          item_ = new global::Centersdk.Protobuf.Item();
        }
        Item.MergeFrom(other.Item);
      }
      if (other.equip_ != null) {
        if (equip_ == null) {
          equip_ = new global::Centersdk.Protobuf.HangingEquipment();
        }
        Equip.MergeFrom(other.Equip);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            if (item_ == null) {
              item_ = new global::Centersdk.Protobuf.Item();
            }
            input.ReadMessage(item_);
            break;
          }
          case 26: {
            if (equip_ == null) {
              equip_ = new global::Centersdk.Protobuf.HangingEquipment();
            }
            input.ReadMessage(equip_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Mail : pb::IMessage<Mail> {
    private static readonly pb::MessageParser<Mail> _parser = new pb::MessageParser<Mail>(() => new Mail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Mail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.MailReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mail(Mail other) : this() {
      createTime_ = other.createTime_;
      expireTime_ = other.expireTime_;
      readState_ = other.readState_;
      attachState_ = other.attachState_;
      senderId_ = other.senderId_;
      senderName_ = other.senderName_;
      senderHead_ = other.senderHead_;
      receiverId_ = other.receiverId_;
      receiverName_ = other.receiverName_;
      receiverHead_ = other.receiverHead_;
      title_ = other.title_;
      content_ = other.content_;
      attachments_ = other.attachments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mail Clone() {
      return new Mail(this);
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 1;
    private long createTime_;
    /// <summary>
    /// 创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "expire_time" field.</summary>
    public const int ExpireTimeFieldNumber = 2;
    private long expireTime_;
    /// <summary>
    /// 过期时间，超过这个时间系统会自动删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ExpireTime {
      get { return expireTime_; }
      set {
        expireTime_ = value;
      }
    }

    /// <summary>Field number for the "read_state" field.</summary>
    public const int ReadStateFieldNumber = 3;
    private int readState_;
    /// <summary>
    /// 读取状态，1 = 未读 2 = 已读
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReadState {
      get { return readState_; }
      set {
        readState_ = value;
      }
    }

    /// <summary>Field number for the "attach_state" field.</summary>
    public const int AttachStateFieldNumber = 4;
    private int attachState_;
    /// <summary>
    /// 附件状态，0 = 无附件，1 = 有附件未领，2 = 有附件已领
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttachState {
      get { return attachState_; }
      set {
        attachState_ = value;
      }
    }

    /// <summary>Field number for the "sender_id" field.</summary>
    public const int SenderIdFieldNumber = 5;
    private long senderId_;
    /// <summary>
    /// 发送者id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SenderId {
      get { return senderId_; }
      set {
        senderId_ = value;
      }
    }

    /// <summary>Field number for the "sender_name" field.</summary>
    public const int SenderNameFieldNumber = 6;
    private string senderName_ = "";
    /// <summary>
    /// 发送者姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SenderName {
      get { return senderName_; }
      set {
        senderName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sender_head" field.</summary>
    public const int SenderHeadFieldNumber = 7;
    private int senderHead_;
    /// <summary>
    /// 发送者头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SenderHead {
      get { return senderHead_; }
      set {
        senderHead_ = value;
      }
    }

    /// <summary>Field number for the "receiver_id" field.</summary>
    public const int ReceiverIdFieldNumber = 8;
    private long receiverId_;
    /// <summary>
    /// 接受者id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReceiverId {
      get { return receiverId_; }
      set {
        receiverId_ = value;
      }
    }

    /// <summary>Field number for the "receiver_name" field.</summary>
    public const int ReceiverNameFieldNumber = 9;
    private string receiverName_ = "";
    /// <summary>
    /// 接受者姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReceiverName {
      get { return receiverName_; }
      set {
        receiverName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "receiver_head" field.</summary>
    public const int ReceiverHeadFieldNumber = 10;
    private int receiverHead_;
    /// <summary>
    /// 接受者头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReceiverHead {
      get { return receiverHead_; }
      set {
        receiverHead_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 11;
    private string title_ = "";
    /// <summary>
    /// 邮件标题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 12;
    private string content_ = "";
    /// <summary>
    /// 邮件内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attachments" field.</summary>
    public const int AttachmentsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Centersdk.Protobuf.Attachment> _repeated_attachments_codec
        = pb::FieldCodec.ForMessage(106, global::Centersdk.Protobuf.Attachment.Parser);
    private readonly pbc::RepeatedField<global::Centersdk.Protobuf.Attachment> attachments_ = new pbc::RepeatedField<global::Centersdk.Protobuf.Attachment>();
    /// <summary>
    /// 附件列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Centersdk.Protobuf.Attachment> Attachments {
      get { return attachments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Mail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Mail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CreateTime != other.CreateTime) return false;
      if (ExpireTime != other.ExpireTime) return false;
      if (ReadState != other.ReadState) return false;
      if (AttachState != other.AttachState) return false;
      if (SenderId != other.SenderId) return false;
      if (SenderName != other.SenderName) return false;
      if (SenderHead != other.SenderHead) return false;
      if (ReceiverId != other.ReceiverId) return false;
      if (ReceiverName != other.ReceiverName) return false;
      if (ReceiverHead != other.ReceiverHead) return false;
      if (Title != other.Title) return false;
      if (Content != other.Content) return false;
      if(!attachments_.Equals(other.attachments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      if (ExpireTime != 0L) hash ^= ExpireTime.GetHashCode();
      if (ReadState != 0) hash ^= ReadState.GetHashCode();
      if (AttachState != 0) hash ^= AttachState.GetHashCode();
      if (SenderId != 0L) hash ^= SenderId.GetHashCode();
      if (SenderName.Length != 0) hash ^= SenderName.GetHashCode();
      if (SenderHead != 0) hash ^= SenderHead.GetHashCode();
      if (ReceiverId != 0L) hash ^= ReceiverId.GetHashCode();
      if (ReceiverName.Length != 0) hash ^= ReceiverName.GetHashCode();
      if (ReceiverHead != 0) hash ^= ReceiverHead.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      hash ^= attachments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CreateTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CreateTime);
      }
      if (ExpireTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ExpireTime);
      }
      if (ReadState != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ReadState);
      }
      if (AttachState != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AttachState);
      }
      if (SenderId != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(SenderId);
      }
      if (SenderName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SenderName);
      }
      if (SenderHead != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SenderHead);
      }
      if (ReceiverId != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(ReceiverId);
      }
      if (ReceiverName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ReceiverName);
      }
      if (ReceiverHead != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ReceiverHead);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Title);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Content);
      }
      attachments_.WriteTo(output, _repeated_attachments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
      }
      if (ExpireTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpireTime);
      }
      if (ReadState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReadState);
      }
      if (AttachState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttachState);
      }
      if (SenderId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SenderId);
      }
      if (SenderName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderName);
      }
      if (SenderHead != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SenderHead);
      }
      if (ReceiverId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReceiverId);
      }
      if (ReceiverName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReceiverName);
      }
      if (ReceiverHead != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReceiverHead);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      size += attachments_.CalculateSize(_repeated_attachments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Mail other) {
      if (other == null) {
        return;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      if (other.ExpireTime != 0L) {
        ExpireTime = other.ExpireTime;
      }
      if (other.ReadState != 0) {
        ReadState = other.ReadState;
      }
      if (other.AttachState != 0) {
        AttachState = other.AttachState;
      }
      if (other.SenderId != 0L) {
        SenderId = other.SenderId;
      }
      if (other.SenderName.Length != 0) {
        SenderName = other.SenderName;
      }
      if (other.SenderHead != 0) {
        SenderHead = other.SenderHead;
      }
      if (other.ReceiverId != 0L) {
        ReceiverId = other.ReceiverId;
      }
      if (other.ReceiverName.Length != 0) {
        ReceiverName = other.ReceiverName;
      }
      if (other.ReceiverHead != 0) {
        ReceiverHead = other.ReceiverHead;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      attachments_.Add(other.attachments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 16: {
            ExpireTime = input.ReadInt64();
            break;
          }
          case 24: {
            ReadState = input.ReadInt32();
            break;
          }
          case 32: {
            AttachState = input.ReadInt32();
            break;
          }
          case 40: {
            SenderId = input.ReadInt64();
            break;
          }
          case 50: {
            SenderName = input.ReadString();
            break;
          }
          case 56: {
            SenderHead = input.ReadInt32();
            break;
          }
          case 64: {
            ReceiverId = input.ReadInt64();
            break;
          }
          case 74: {
            ReceiverName = input.ReadString();
            break;
          }
          case 80: {
            ReceiverHead = input.ReadInt32();
            break;
          }
          case 90: {
            Title = input.ReadString();
            break;
          }
          case 98: {
            Content = input.ReadString();
            break;
          }
          case 106: {
            attachments_.AddEntriesFrom(input, _repeated_attachments_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MailList : pb::IMessage<MailList> {
    private static readonly pb::MessageParser<MailList> _parser = new pb::MessageParser<MailList>(() => new MailList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MailList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.MailReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailList(MailList other) : this() {
      userId_ = other.userId_;
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailList Clone() {
      return new MailList(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private long userId_;
    /// <summary>
    /// 用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Centersdk.Protobuf.Mail> _repeated_data_codec
        = pb::FieldCodec.ForMessage(18, global::Centersdk.Protobuf.Mail.Parser);
    private readonly pbc::RepeatedField<global::Centersdk.Protobuf.Mail> data_ = new pbc::RepeatedField<global::Centersdk.Protobuf.Mail>();
    /// <summary>
    /// 邮件列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Centersdk.Protobuf.Mail> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MailList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MailList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0L) hash ^= UserId.GetHashCode();
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserId);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MailList other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0L) {
        UserId = other.UserId;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt64();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewAttachment : pb::IMessage<NewAttachment> {
    private static readonly pb::MessageParser<NewAttachment> _parser = new pb::MessageParser<NewAttachment>(() => new NewAttachment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewAttachment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.MailReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewAttachment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewAttachment(NewAttachment other) : this() {
      type_ = other.type_;
      kind_ = other.kind_;
      index_ = other.index_;
      itemCount_ = other.itemCount_;
      uniqueId_ = other.uniqueId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewAttachment Clone() {
      return new NewAttachment(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    /// 附件类型，1 = 道具，2 = 装备
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 2;
    private string kind_ = "";
    /// <summary>
    /// 道具分类
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Kind {
      get { return kind_; }
      set {
        kind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 3;
    private int index_;
    /// <summary>
    /// 道具在背包的格子索引
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "item_count" field.</summary>
    public const int ItemCountFieldNumber = 4;
    private int itemCount_;
    /// <summary>
    /// 道具数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemCount {
      get { return itemCount_; }
      set {
        itemCount_ = value;
      }
    }

    /// <summary>Field number for the "unique_id" field.</summary>
    public const int UniqueIdFieldNumber = 5;
    private long uniqueId_;
    /// <summary>
    /// 装备唯一id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UniqueId {
      get { return uniqueId_; }
      set {
        uniqueId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewAttachment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewAttachment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Kind != other.Kind) return false;
      if (Index != other.Index) return false;
      if (ItemCount != other.ItemCount) return false;
      if (UniqueId != other.UniqueId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Kind.Length != 0) hash ^= Kind.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (ItemCount != 0) hash ^= ItemCount.GetHashCode();
      if (UniqueId != 0L) hash ^= UniqueId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Kind.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Kind);
      }
      if (Index != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Index);
      }
      if (ItemCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ItemCount);
      }
      if (UniqueId != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(UniqueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Kind.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Kind);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (ItemCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemCount);
      }
      if (UniqueId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UniqueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewAttachment other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Kind.Length != 0) {
        Kind = other.Kind;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.ItemCount != 0) {
        ItemCount = other.ItemCount;
      }
      if (other.UniqueId != 0L) {
        UniqueId = other.UniqueId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            Kind = input.ReadString();
            break;
          }
          case 24: {
            Index = input.ReadInt32();
            break;
          }
          case 32: {
            ItemCount = input.ReadInt32();
            break;
          }
          case 40: {
            UniqueId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewMail : pb::IMessage<NewMail> {
    private static readonly pb::MessageParser<NewMail> _parser = new pb::MessageParser<NewMail>(() => new NewMail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewMail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.MailReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewMail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewMail(NewMail other) : this() {
      receiverId_ = other.receiverId_;
      title_ = other.title_;
      content_ = other.content_;
      attachments_ = other.attachments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewMail Clone() {
      return new NewMail(this);
    }

    /// <summary>Field number for the "receiver_id" field.</summary>
    public const int ReceiverIdFieldNumber = 1;
    private long receiverId_;
    /// <summary>
    /// 接受者id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReceiverId {
      get { return receiverId_; }
      set {
        receiverId_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    /// <summary>
    /// 邮件标题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 3;
    private string content_ = "";
    /// <summary>
    /// 邮件内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attachments" field.</summary>
    public const int AttachmentsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Centersdk.Protobuf.NewAttachment> _repeated_attachments_codec
        = pb::FieldCodec.ForMessage(34, global::Centersdk.Protobuf.NewAttachment.Parser);
    private readonly pbc::RepeatedField<global::Centersdk.Protobuf.NewAttachment> attachments_ = new pbc::RepeatedField<global::Centersdk.Protobuf.NewAttachment>();
    /// <summary>
    /// 附件列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Centersdk.Protobuf.NewAttachment> Attachments {
      get { return attachments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewMail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewMail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReceiverId != other.ReceiverId) return false;
      if (Title != other.Title) return false;
      if (Content != other.Content) return false;
      if(!attachments_.Equals(other.attachments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReceiverId != 0L) hash ^= ReceiverId.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      hash ^= attachments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReceiverId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ReceiverId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Content);
      }
      attachments_.WriteTo(output, _repeated_attachments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReceiverId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReceiverId);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      size += attachments_.CalculateSize(_repeated_attachments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewMail other) {
      if (other == null) {
        return;
      }
      if (other.ReceiverId != 0L) {
        ReceiverId = other.ReceiverId;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      attachments_.Add(other.attachments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReceiverId = input.ReadInt64();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            Content = input.ReadString();
            break;
          }
          case 34: {
            attachments_.AddEntriesFrom(input, _repeated_attachments_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MailBatchReq : pb::IMessage<MailBatchReq> {
    private static readonly pb::MessageParser<MailBatchReq> _parser = new pb::MessageParser<MailBatchReq>(() => new MailBatchReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MailBatchReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.MailReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailBatchReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailBatchReq(MailBatchReq other) : this() {
      box_ = other.box_;
      createTimes_ = other.createTimes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailBatchReq Clone() {
      return new MailBatchReq(this);
    }

    /// <summary>Field number for the "box" field.</summary>
    public const int BoxFieldNumber = 1;
    private string box_ = "";
    /// <summary>
    /// "Inbox" or "Outbox"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Box {
      get { return box_; }
      set {
        box_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_times" field.</summary>
    public const int CreateTimesFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_createTimes_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> createTimes_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 邮件的创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> CreateTimes {
      get { return createTimes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MailBatchReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MailBatchReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Box != other.Box) return false;
      if(!createTimes_.Equals(other.createTimes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Box.Length != 0) hash ^= Box.GetHashCode();
      hash ^= createTimes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Box.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Box);
      }
      createTimes_.WriteTo(output, _repeated_createTimes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Box.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Box);
      }
      size += createTimes_.CalculateSize(_repeated_createTimes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MailBatchReq other) {
      if (other == null) {
        return;
      }
      if (other.Box.Length != 0) {
        Box = other.Box;
      }
      createTimes_.Add(other.createTimes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Box = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            createTimes_.AddEntriesFrom(input, _repeated_createTimes_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
