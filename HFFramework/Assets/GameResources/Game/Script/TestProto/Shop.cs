// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: shop.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Centersdk.Protobuf {

  /// <summary>Holder for reflection information generated from shop.proto</summary>
  public static partial class ShopReflection {

    #region Descriptor
    /// <summary>File descriptor for shop.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ShopReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpzaG9wLnByb3RvEhJjZW50ZXJzZGsucHJvdG9idWYingEKDFNob3BJdGVt",
            "TGlzdBIPCgdzaG9wX2lkGAEgASgFEg0KBWdvb2RzGAIgAygFEg8KB2lzX3Nl",
            "bGwYAyADKAgSEAoIaXNfZmlyc3QYBCADKAgSFgoOcmVmcmVzaF9taWxsaXMY",
            "BSABKAMSFwoPcmVmcmVzaF9kaWFtb25kGAYgASgDEhoKEmJ0bl9yZWZyZXNo",
            "X21pbGxpcxgHIAEoAyIkCgdTaG9wUmVxEgoKAmlkGAEgASgFEg0KBWNvdW50",
            "GAIgASgFIicKClJtYlNob3BSZXESCgoCaWQYASABKAUSDQoFY291bnQYAiAB",
            "KAVCKgodY29tLmhvb2xhaS5jZW50ZXJzZGsucHJvdG9idWZCCVNob3BQcm90",
            "b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.ShopItemList), global::Centersdk.Protobuf.ShopItemList.Parser, new[]{ "ShopId", "Goods", "IsSell", "IsFirst", "RefreshMillis", "RefreshDiamond", "BtnRefreshMillis" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.ShopReq), global::Centersdk.Protobuf.ShopReq.Parser, new[]{ "Id", "Count" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Centersdk.Protobuf.RmbShopReq), global::Centersdk.Protobuf.RmbShopReq.Parser, new[]{ "Id", "Count" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ShopItemList : pb::IMessage<ShopItemList> {
    private static readonly pb::MessageParser<ShopItemList> _parser = new pb::MessageParser<ShopItemList>(() => new ShopItemList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShopItemList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.ShopReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopItemList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopItemList(ShopItemList other) : this() {
      shopId_ = other.shopId_;
      goods_ = other.goods_.Clone();
      isSell_ = other.isSell_.Clone();
      isFirst_ = other.isFirst_.Clone();
      refreshMillis_ = other.refreshMillis_;
      refreshDiamond_ = other.refreshDiamond_;
      btnRefreshMillis_ = other.btnRefreshMillis_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopItemList Clone() {
      return new ShopItemList(this);
    }

    /// <summary>Field number for the "shop_id" field.</summary>
    public const int ShopIdFieldNumber = 1;
    private int shopId_;
    /// <summary>
    /// 商城id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShopId {
      get { return shopId_; }
      set {
        shopId_ = value;
      }
    }

    /// <summary>Field number for the "goods" field.</summary>
    public const int GoodsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_goods_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> goods_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 物品列表, 0表示该位置已经被买走，为空
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Goods {
      get { return goods_; }
    }

    /// <summary>Field number for the "is_sell" field.</summary>
    public const int IsSellFieldNumber = 3;
    private static readonly pb::FieldCodec<bool> _repeated_isSell_codec
        = pb::FieldCodec.ForBool(26);
    private readonly pbc::RepeatedField<bool> isSell_ = new pbc::RepeatedField<bool>();
    /// <summary>
    /// 是否出售
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> IsSell {
      get { return isSell_; }
    }

    /// <summary>Field number for the "is_first" field.</summary>
    public const int IsFirstFieldNumber = 4;
    private static readonly pb::FieldCodec<bool> _repeated_isFirst_codec
        = pb::FieldCodec.ForBool(34);
    private readonly pbc::RepeatedField<bool> isFirst_ = new pbc::RepeatedField<bool>();
    /// <summary>
    /// 是否首充
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> IsFirst {
      get { return isFirst_; }
    }

    /// <summary>Field number for the "refresh_millis" field.</summary>
    public const int RefreshMillisFieldNumber = 5;
    private long refreshMillis_;
    /// <summary>
    /// 剩余刷新毫秒数，对于某些类型的商店生效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RefreshMillis {
      get { return refreshMillis_; }
      set {
        refreshMillis_ = value;
      }
    }

    /// <summary>Field number for the "refresh_diamond" field.</summary>
    public const int RefreshDiamondFieldNumber = 6;
    private long refreshDiamond_;
    /// <summary>
    /// 刷新需要钻石数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RefreshDiamond {
      get { return refreshDiamond_; }
      set {
        refreshDiamond_ = value;
      }
    }

    /// <summary>Field number for the "btn_refresh_millis" field.</summary>
    public const int BtnRefreshMillisFieldNumber = 7;
    private long btnRefreshMillis_;
    /// <summary>
    /// 按钮刷新剩余毫秒数，对于某些类型的商店生效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BtnRefreshMillis {
      get { return btnRefreshMillis_; }
      set {
        btnRefreshMillis_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShopItemList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShopItemList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShopId != other.ShopId) return false;
      if(!goods_.Equals(other.goods_)) return false;
      if(!isSell_.Equals(other.isSell_)) return false;
      if(!isFirst_.Equals(other.isFirst_)) return false;
      if (RefreshMillis != other.RefreshMillis) return false;
      if (RefreshDiamond != other.RefreshDiamond) return false;
      if (BtnRefreshMillis != other.BtnRefreshMillis) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShopId != 0) hash ^= ShopId.GetHashCode();
      hash ^= goods_.GetHashCode();
      hash ^= isSell_.GetHashCode();
      hash ^= isFirst_.GetHashCode();
      if (RefreshMillis != 0L) hash ^= RefreshMillis.GetHashCode();
      if (RefreshDiamond != 0L) hash ^= RefreshDiamond.GetHashCode();
      if (BtnRefreshMillis != 0L) hash ^= BtnRefreshMillis.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ShopId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ShopId);
      }
      goods_.WriteTo(output, _repeated_goods_codec);
      isSell_.WriteTo(output, _repeated_isSell_codec);
      isFirst_.WriteTo(output, _repeated_isFirst_codec);
      if (RefreshMillis != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(RefreshMillis);
      }
      if (RefreshDiamond != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(RefreshDiamond);
      }
      if (BtnRefreshMillis != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(BtnRefreshMillis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShopId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShopId);
      }
      size += goods_.CalculateSize(_repeated_goods_codec);
      size += isSell_.CalculateSize(_repeated_isSell_codec);
      size += isFirst_.CalculateSize(_repeated_isFirst_codec);
      if (RefreshMillis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RefreshMillis);
      }
      if (RefreshDiamond != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RefreshDiamond);
      }
      if (BtnRefreshMillis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BtnRefreshMillis);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShopItemList other) {
      if (other == null) {
        return;
      }
      if (other.ShopId != 0) {
        ShopId = other.ShopId;
      }
      goods_.Add(other.goods_);
      isSell_.Add(other.isSell_);
      isFirst_.Add(other.isFirst_);
      if (other.RefreshMillis != 0L) {
        RefreshMillis = other.RefreshMillis;
      }
      if (other.RefreshDiamond != 0L) {
        RefreshDiamond = other.RefreshDiamond;
      }
      if (other.BtnRefreshMillis != 0L) {
        BtnRefreshMillis = other.BtnRefreshMillis;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShopId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            goods_.AddEntriesFrom(input, _repeated_goods_codec);
            break;
          }
          case 26:
          case 24: {
            isSell_.AddEntriesFrom(input, _repeated_isSell_codec);
            break;
          }
          case 34:
          case 32: {
            isFirst_.AddEntriesFrom(input, _repeated_isFirst_codec);
            break;
          }
          case 40: {
            RefreshMillis = input.ReadInt64();
            break;
          }
          case 48: {
            RefreshDiamond = input.ReadInt64();
            break;
          }
          case 56: {
            BtnRefreshMillis = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShopReq : pb::IMessage<ShopReq> {
    private static readonly pb::MessageParser<ShopReq> _parser = new pb::MessageParser<ShopReq>(() => new ShopReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShopReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.ShopReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopReq(ShopReq other) : this() {
      id_ = other.id_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopReq Clone() {
      return new ShopReq(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    /// <summary>
    /// 数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShopReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShopReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShopReq other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RmbShopReq : pb::IMessage<RmbShopReq> {
    private static readonly pb::MessageParser<RmbShopReq> _parser = new pb::MessageParser<RmbShopReq>(() => new RmbShopReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RmbShopReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Centersdk.Protobuf.ShopReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RmbShopReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RmbShopReq(RmbShopReq other) : this() {
      id_ = other.id_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RmbShopReq Clone() {
      return new RmbShopReq(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    /// <summary>
    /// 数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RmbShopReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RmbShopReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RmbShopReq other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
